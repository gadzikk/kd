SPIS:
:::JAVA:::
:::CONCURRENCY:::
:::MICROSERVICES:::
:::TESTOWANIE:::
:::WEB_FRAMEWORKS:::
:::WEBSERVICES:::
:::MESSAGING:::
:::FUNCTIONAL_PROGRAMMING:::
:::SCALA:::
:::HASKELL:::
:::MODERN_TOOLS:::
:::NO_SQL:::
:::SIECI:::
:::GIT:::
:::ALGORYTMY:::
:::METODYKI:::
:::LINUX GREP SYSTEMY:::
:::ERROR EXCEPTIONS VALIDACJA:::
:::ENCRYPTION ENCODING HASLA HASH SALT:::
:::DEVOPS:::
:::KONFIGURACJA:::
:::CONTINOUS DEPLOYMENT:::
:::WIEDZA Z ARTYKULOW:::
:::PRAKTYCZNE PROJEKTY:::
:::SQL DATABASES:::
:::REACTIVE_PROGRAMMING:::
:::JAVASCRIPT:::
:::STUDIA:::
:::NIEZWIAZANE:::


0_:::JAVA:::
java,
https://www.journaldev.com/3884/java-is-pass-by-value-and-not-pass-by-reference
https://hackr.io/blog/what-is-java
http://tutorials.jenkov.com/java/what-is-java.html
https://www.geeksforgeeks.org/java-platform-independent/
https://www.geeksforgeeks.org/dynamic-method-dispatch-runtime-polymorphism-java/
OOP,
Zasady programowania obiektowego,
https://javapapers.com/oops/association-aggregation-composition-abstraction-generalization-realization-dependency/
https://raygun.com/blog/oop-concepts-java/
https://ell.stackexchange.com/questions/10749/realization-vs-implementation-of-a-computer-program
https://www.geeksforgeeks.org/understanding-classes-and-objects-in-java/
SOLID,
https://www.oodesign.com/design-principles.html
https://itnext.io/solid-principles-explanation-and-examples-715b975dcad4
https://www.digitalocean.com/community/conceptual_articles/s-o-l-i-d-the-first-five-principles-of-object-oriented-design
Design patterns,
https://www.digitalocean.com/community/tutorials/java-design-patterns-example-tutorial
https://www.javatpoint.com/design-patterns-in-java
https://refactoring.guru/design-patterns/java
https://github.com/gadzikk/algorithms/tree/master/src/main/java/design_patterns
https://www.dofactory.com/forum/1590/factory-pattern-vs-abstract-factory-pattern
https://stackoverflow.com/questions/5739611/what-are-the-differences-between-abstract-factory-and-factory-design-patterns
Static (pelne przeznaczenie),
https://www.baeldung.com/java-static
https://www.geeksforgeeks.org/difference-between-static-and-non-static-method-in-java
https://www.geeksforgeeks.org/difference-between-static-and-non-static-variables-in-java
https://www.quora.com/When-do-Static-Variables-get-Garbage-Collected-in-Java
https://stackoverflow.com/questions/453023/are-static-fields-open-for-garbage-collection
Final (pelne przeznaczenie),
https://www.geeksforgeeks.org/final-keyword-java
Nested claseses (roznice),
http://tutorials.jenkov.com/java/nested-classes.html
https://stackoverflow.com/questions/70324/java-inner-class-and-static-nested-class
https://www.geeksforgeeks.org/anonymous-inner-class-java/
https://www.geeksforgeeks.org/local-inner-class-java/
String,
https://www.javatpoint.com/why-string-is-immutable-or-final-in-java
https://www.baeldung.com/java-string-immutable
https://www.digitalocean.com/community/tutorials/string-immutable-final-java
Hashmap,
https://www.baeldung.com/java-hashmap
https://www.digitalocean.com/community/tutorials/java-hashmap
https://javarevisited.blogspot.com/2011/02/how-hashmap-works-in-java.html#axzz7uoOVtqqR
https://levelup.gitconnected.com/how-does-hashmap-work-internally-612dd950822f
https://medium.com/zero-equals-false/how-hashmap-works-a-missing-piece-of-hood-29dd28c4c01e
https://stackoverflow.com/questions/23977856/are-hashcodes-unique-for-strings
Kolejnosc wykonania(constructor, postConstruct, static block, dependency injection),
https://www.baeldung.com/java-initialization
https://stackoverflow.com/questions/38068303/spring-autowiring-order-and-postconstruct
https://www.knitelius.com/2016/10/05/understanding-dependency-injection-part-2-postconstruct-and-constructor-injection/
https://www.programmersought.com/article/2749180297/
https://stackoverflow.com/questions/19561332/in-what-order-do-static-blocks-and-initialization-blocks-execute-when-using-inhe/35001374
https://www.geeksforgeeks.org/g-fact-26-the-initializer-block-in-java/
Recursion,
https://www.pixelstech.net/article/1474689232-Traditional-recursion-vs-Tail-recursion
https://www.geeksforgeeks.org/tail-recursion/
https://stackoverflow.com/questions/21426688/the-difference-between-head-tail-recursion
https://stackoverflow.com/questions/33923/what-is-tail-recursion
http://learnyouahaskell.com/recursion
Plik buffery,
http://tutorials.jenkov.com/java-io/index.html
https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html
https://www.baeldung.com/java-try-with-resources
Reflection,
http://tutorials.jenkov.com/java-reflection/index.html
https://stackoverflow.com/questions/37628/what-is-reflection-and-why-is-it-useful
https://www.baeldung.com/java-reflection
Abstract class vs interface
https://www.journaldev.com/1607/difference-between-abstract-class-and-interface-in-java#difference-between-abstract-class-and-interface
https://javapapers.com/core-java/abstract-and-interface-core-java-2/difference-between-a-java-interface-and-a-java-abstract-class/
https://www.geeksforgeeks.org/difference-between-abstract-class-and-interface-in-java/
https://stackoverflow.com/questions/18777989/how-should-i-have-explained-the-difference-between-an-interface-and-an-abstract
Inheritance
https://www.journaldev.com/1775/multiple-inheritance-in-java
https://www.interviewsansar.com/order-execution-constructors-java-inheritance/
Rozne,
https://www.journaldev.com/2452/serialization-in-java
https://www.geeksforgeeks.org/instanceof-operator-vs-isinstance-method-in-java/
https://www.geeksforgeeks.org/strictfp-keyword-java/
https://www.baeldung.com/java-fail-safe-vs-fail-fast-iterator
https://stackoverflow.com/questions/8759868/java-logical-operator-short-circuiting
https://stackoverflow.com/questions/322715/when-to-use-linkedlist-over-arraylist-in-java
https://www.javatpoint.com/difference-between-arraylist-and-linkedlist
https://stackoverflow.com/questions/10656471/performance-differences-between-arraylist-and-linkedlist
https://stackoverflow.com/questions/18734705/which-one-runs-faster-arraylist-or-linkedlist?noredirect=1&lq=1
https://www.geeksforgeeks.org/internal-working-of-treemap-in-java
https://www.geeksforgeeks.org/hashmap-treemap-java
https://www.geeksforgeeks.org/internal-working-of-arraylist-in-java
https://javagoal.com/immutable-collection-in-java/
https://stackoverflow.com/questions/3368830/how-to-name-factory-like-methods
https://www.infoworld.com/article/2173838/how-to-copy-objects-in-java-shallow-copy-and-deep-copy.html

https://www.geeksforgeeks.org/java
https://www.journaldev.com/2366/core-java-interview-questions-and-answers
https://www.journaldev.com/1330/java-collections-interview-questions-and-answers

book: Effective Java | Thinking in Java | Clean code | Designing Data-Intensive Applications

:JVM
Garbage collector struktura dzialanie,
https://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html

Garbage collector tryby (oraz plusy I minusy),
https://developers.redhat.com/articles/2021/11/02/how-choose-best-java-garbage-collector
https://www.baeldung.com/jvm-garbage-collectors
https://www.overops.com/blog/garbage-collectors-serial-vs-parallel-vs-cms-vs-the-g1-and-whats-new-in-java-8/
https://javapapers.com/java/types-of-java-garbage-collectors/
(szczegolowe opisy poszczegolnych gcolectorow)
https://docs.oracle.com/en/java/javase/17/gctuning/garbage-first-g1-garbage-collector1.html#GUID-CE6F94B6-71AF-45D5-829E-DEADD9BA929D
Metaspace,
https://www.baeldung.com/java-permgen-metaspace
https://www.geeksforgeeks.org/metaspace-in-java-8-with-examples/
https://medium.com/@AlexanderObregon/introduction-to-javas-memory-model-heap-stack-and-metaspace-ceaeb565921c
https://stackoverflow.com/questions/27131165/what-is-the-difference-between-permgen-and-metaspace
https://stuefe.de/posts/metaspace/what-is-metaspace/
https://www.linkedin.com/pulse/java-memory-permgen-vs-metaspace-incus-data-pty-ltd-drxbe
https://stackoverflow.com/questions/8387989/where-are-static-methods-and-static-variables-stored-in-java
Monitorowanie,
https://www.google.com/search?client=firefox-b-d&q=JVisualVM
https://blog.gceasy.io/2016/11/22/resolve-memory-leak/
https://docs.oracle.com/cd/E13150_01/jrockit_jvm/jrockit/geninfo/diagnos/using_threaddumps.html
https://howtodoinjava.com/linux/how-to-get-thread-dump-in-linux-using-jstack/
http://openjdk.java.net/projects/code-tools/jmh/
stackOverFlowError,
https://stackoverflow.com/questions/214741/what-is-a-stackoverflowerror
outOfMemoryError,
https://stackoverflow.com/questions/37335/how-to-deal-with-java-lang-outofmemoryerror-java-heap-space-error
https://stackoverflow.com/questions/1596009/java-lang-outofmemoryerror-java-heap-space
https://www.baeldung.com/java-heap-dump-capture
https://docs.oracle.com/javase/7/docs/webnotes/tsg/TSG-VM/html/clopts.html
Jstack, jmap,
https://www.journaldev.com/1053/java-thread-dump-visualvm-jstack-kill-3-jcmd
https://www.baeldung.com/java-heap-dump-capture
https://linuxhint.com/jmap-and-jstack-tutorial/
https://docs.oracle.com/javase/8/docs/technotes/tools/unix/jstack.html
Alokacja obiektow,
https://www.baeldung.com/java-stack-heap
https://stackoverflow.com/questions/258120/what-is-the-memory-consumption-of-an-object-in-java
https://www.geeksforgeeks.org/g-fact-46/
https://javarevisited.blogspot.com/2013/01/difference-between-stack-and-heap-java.html#axzz6cg0eRsjW
Alkokacja watkow,
https://stackoverflow.com/questions/36898701/how-does-java-jvm-allocate-stack-for-each-thread
https://dzone.com/articles/how-much-memory-does-a-java-thread-take
https://stackoverflow.com/questions/10554604/memory-allocation-with-thread
JVM vs JRE vs JVM,
https://www.programiz.com/java-programming/jvm-jre-jdk
https://www.journaldev.com/546/difference-jdk-vs-jre-vs-jvm
Heap and stack
https://www.journaldev.com/4098/java-heap-space-vs-stack-memory
https://blog.usejournal.com/til-9-stack-and-heap-in-a-nutshell-48e61fe5d140
String pool,
https://medium.com/edureka/java-string-pool-5b5b3b327bdf
https://www.baeldung.com/java-string-pool
https://www.journaldev.com/797/what-is-java-string-pool
Early late bindings,
https://www.baeldung.com/java-static-dynamic-binding
https://www.techiedelight.com/difference-between-early-late-binding-java/
https://beginnersbook.com/2013/04/java-static-dynamic-binding/
https://www.geeksforgeeks.org/static-vs-dynamic-binding-in-java/
Weak strong refrence,
https://stackoverflow.com/questions/9809074/java-difference-between-strong-soft-weak-phantom-reference
https://stackoverflow.com/questions/299659/whats-the-difference-between-softreference-and-weakreference-in-java
https://www.baeldung.com/java-weak-reference
Rozne,
https://dzone.com/articles/understanding-jvm-internals
https://www.geeksforgeeks.org/jvm-works-jvm-architecture/
https://medium.com/better-programming/understand-threads-and-threading-in-java-8f706fc44d13
https://stackoverflow.com/questions/33344123/every-jvm-created-for-each-application-is-this-a-thread-or-a-process
https://www.infoworld.com/article/3336222/java-challengers-6-thread-behavior-in-the-jvm.html
https://www.infoworld.com/article/2076971/how-the-java-virtual-machine-performs-thread-synchronization.html
https://blog.jamesdbloom.com/JVMInternals.html
http://tutorials.jenkov.com/java-performance/index.html
https://www.journaldev.com/2856/java-jvm-memory-model-memory-management-in-java
https://www.geeksforgeeks.org/jvm-works-jvm-architecture/
https://www.geeksforgeeks.org/jvm-shutdown-hook-java/
https://www.geeksforgeeks.org/java-class-file/
https://en.wikipedia.org/wiki/Just-in-time_compilation
https://stackoverflow.com/questions/16568253/difference-between-jvm-and-hotspot
https://stackoverflow.com/questions/2423284/java-thread-garbage-collected-or-not
https://www.geeksforgeeks.org/difference-between-byte-code-and-machine-code/
https://medium.com/@pravvich/jvm-under-the-hood-d3ff1ed9ea34

https://www.journaldev.com/349/java-classloader
https://www.baeldung.com/java-classloaders

:J8
Lambda, Streams, Map, reduce, collect, sorting, consumer, producer, supplier, function
https://www.journaldev.com/2763/java-8-functional-interfaces
https://www.journaldev.com/2774/java-8-stream
https://www.geeksforgeeks.org/difference-between-streams-and-collections-in-java/
https://stackoverflow.com/questions/39432699/what-is-the-difference-between-streams-and-collections-in-java-8
https://www.java2novice.com/java_interview_questions/java-8-stream-terminal-operations/
https://www.java2novice.com/java_interview_questions/java-8-stream-intermediate-operations/
https://www.concretepage.com/java/java-8/
https://mkyong.com/tutorials/java-8-tutorials/
http://zetcode.com/java/streamreduce/
https://mkyong.com/java8/java-8-convert-list-to-map/
https://mkyong.com/java8/java-8-convert-a-stream-to-list/
https://mkyong.com/java8/java-8-how-to-sum-bigdecimal-using-stream/
https://javadevcentral.com/java-stream-sum
https://stackoverflow.com/questions/21219667/stream-and-lazy-evaluation

Nowe wersje javy co wprowadzono,
https://mkyong.com/java/what-is-new-in-java-11/
https://mkyong.com/java/what-is-new-in-java-12/
https://mkyong.com/java/what-is-new-in-java-13/
https://mkyong.com/java/what-is-new-in-java-14/
https://mkyong.com/java/what-is-new-in-java-15/
https://www.journaldev.com/2389/java-8-features-with-examples
https://www.journaldev.com/13106/java-9-modules
https://www.journaldev.com/13121/java-9-features-with-examples
https://www.journaldev.com/20395/java-10-features
https://www.journaldev.com/24601/java-11-features
https://www.journaldev.com/28666/java-12-features
https://www.journaldev.com/33204/java-13-features
https://www.journaldev.com/37273/java-14-features


Book: java8 in action

:JLibaries
https://dzone.com/articles/20-useful-open-source-libraries-for-java-programme


0_:::CONCURRENCY:::
Concurrency ogolnie,
http://tutorials.jenkov.com/java-concurrency/benefits.html
http://tutorials.jenkov.com/java-concurrency/costs.html
https://javarevisited.blogspot.com/2015/05/top-10-java-multithreading-and.html#axzz5Neevu8QO
https://practice.geeksforgeeks.org/problems/what-are-the-advantages-of-concurrency
https://sceweb.uhcl.edu/helm/RationalUnifiedProcess/process/workflow/ana_desi/co_cncry.htm
https://docs.oracle.com/cd/E13203_01/tuxedo/tux71/html/pgthr5.htm
https://www.programmersought.com/article/38971341326/
https://medium.com/@recepinancc/til-8-concurrency-and-parallelism-in-a-nutshell-d19f379241c9
https://www.multisoftvirtualacademy.com/blog/common-advantages-and-disadvantages-of-multithreading-in-java/
Concurrency vs Parallelism,
https://www.geeksforgeeks.org/difference-between-concurrency-and-parallelism/
https://www.baeldung.com/cs/concurrency-vs-parallelism
https://luminousmen.com/post/concurrency-and-parallelism-are-different/
Watki ogolnie,
https://stackoverflow.com/questions/4315292/concurrency-processes-vs-threads
https://www.geeksforgeeks.org/difference-between-process-and-thread/
https://techdifferences.com/difference-between-process-and-thread-in-java.html
https://www.guru99.com/difference-between-process-and-thread.html
https://www.codejava.net/java-core/concurrency/understanding-thread-priorities-and-daemon-thread-in-java
https://www.codejava.net/java-core/concurrency/understanding-thread-states-thread-life-cycle-in-java
https://www.baeldung.com/java-thread-stop
https://www.geeksforgeeks.org/killing-threads-in-java/
https://www.codejava.net/java-core/concurrency/how-to-use-threads-in-java-create-start-pause-interrupt-and-join
https://www.geeksforgeeks.org/difference-between-thread-start-and-thread-run-in-java/
https://stackoverflow.com/questions/8579657/whats-the-difference-between-thread-start-and-runnable-run
https://docs.oracle.com/javase/1.5.0/docs/guide/misc/threadPrimitiveDeprecation.html
https://www.baeldung.com/java-daemon-thread
https://stackoverflow.com/questions/2213340/what-is-a-daemon-thread-in-java
https://www.baeldung.com/java-threading-models
Deadlock,
https://docs.oracle.com/javase/tutorial/essential/concurrency/deadlock.html
https://medium.com/@recepinancc/til-10-what-is-a-deadlock-c00753c349f6
https://www.baeldung.com/java-deadlock-livelock
https://dev.to/javinpaul/java-concurrency-tutorial-how-to-avoid-deadlock-in-java-4aeb
http://tutorials.jenkov.com/java-concurrency/deadlock.html
http://tutorials.jenkov.com/java-concurrency/deadlock-prevention.html
https://howtodoinjava.com/java/multi-threading/writing-a-deadlock-and-resolving-in-java/
https://www.geeksforgeeks.org/deadlock-in-java-multithreading/
https://www.geeksforgeeks.org/deadlock-prevention/
https://www.geeksforgeeks.org/deadlock-detection-recovery
https://www.geeksforgeeks.org/deadlock-starvation-and-livelock/
https://stackoverflow.com/questions/6155951/whats-the-difference-between-deadlock-and-livelock
Starvation,
https://docs.oracle.com/javase/tutorial/essential/concurrency/starvelive.html
http://tutorials.jenkov.com/java-concurrency/starvation-and-fairness.html
https://www.codejava.net/java-core/concurrency/understanding-deadlock-livelock-and-starvation-with-code-examples-in-java
https://www.netjstech.com/2017/10/thread-starvation-in-java-multi-threading.html
https://www.logicbig.com/tutorials/core-java-tutorial/java-multi-threading/thread-starvation.html
Pararellism,
https://www.geeksforgeeks.org/introduction-to-parallel-computing/
https://www.geeksforgeeks.org/what-is-parallel-processing/
Producer consumer,
Dinning philosopers,
Race condition,
https://stackoverflow.com/questions/34510/what-is-a-race-condition
http://tutorials.jenkov.com/java-concurrency/race-conditions-and-critical-sections.html
https://javarevisited.blogspot.com/2012/02/what-is-race-condition-in.html#axzz6crABS0OE
Critical Section
https://stackoverflow.com/questions/416183/in-java-critical-sections-what-should-i-synchronize-on
Synchronization, Mutex, Sempahores,
https://stackoverflow.com/questions/16907992/synchronized-vs-semaphore
https://stackoverflow.com/questions/5083818/is-it-better-to-synchronize-with-semaphores-or-with-monitors?lq=1
https://stackoverflow.com/questions/2332765/lock-mutex-semaphore-whats-the-difference
Volatile vs Atomic,
https://www.geeksforgeeks.org/volatile-keyword-in-java/
https://stackoverflow.com/questions/19744508/volatile-vs-atomic
https://stackoverflow.com/questions/3786825/volatile-boolean-vs-atomicboolean
https://stackoverflow.com/questions/3519664/difference-between-volatile-and-synchronized-in-java
https://javarevisited.blogspot.com/2020/04/difference-between-atomic-volatile-and-synchronized-in-java-multi-threading.html#axzz6cYHaqKSJ
Optimistic pessimistic locking,
https://medium.com/@recepinancc/til-9-optimistic-vs-pessimistic-locking-79a349b76dc8
Concurrent collections
https://javarevisited.blogspot.com/2013/02/concurrenthashmap-in-java-example-tutorial-working.html#axzz6crABS0OE
https://javarevisited.blogspot.com/2011/04/difference-between-concurrenthashmap.html#axzz6crABS0OE
http://tutorials.jenkov.com/java-concurrency/blocking-queues.html
https://stackoverflow.com/questions/28979488/difference-between-copyonwritearraylist-and-synchronizedlist
https://howtodoinjava.com/java/collections/arraylist/synchronize-arraylist/
https://www.java67.com/2015/06/difference-between-synchronized-arraylist-and-copyOnWriteArrayList-java.html
https://www.quora.com/What-are-the-pros-and-cons-of-CopyOnWriteArrayList-vs-Collections-SynchronizedList-When-do-we-choose-one-over-another
https://stackoverflow.com/questions/8203864/choosing-the-best-concurrency-list-in-java
https://stackoverflow.com/questions/6992608/why-there-is-no-concurrenthashset-against-concurrenthashmap
https://javarevisited.blogspot.com/2017/08/how-to-create-thread-safe-concurrent-hashset-in-java-8.html#axzz6dJx1INNi
https://www.java67.com/2017/08/how-to-create-concurrenthashset-from-concurrentHashMap-Java-example.html
Locks,
http://flex4java.blogspot.com/2015/02/lock-reentrantlock-reentrantreadwritelo.html
https://examples.javacodegeeks.com/core-java/util/concurrent/locks-concurrent/reentrantlock/java-reentrantreadwritelock-example/
https://bowenli86.github.io/2016/04/20/java/concurrency/Java-Concurrency-ReentrantLock/
https://www.codejava.net/java-core/concurrency/java-readwritelock-and-reentrantreadwritelock-example
https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/locks/ReentrantReadWriteLock.html
https://www.baeldung.com/java-concurrent-locks
http://tutorials.jenkov.com/java-concurrency/read-write-locks.html
http://tutorials.jenkov.com/java-concurrency/locks.html#reentrance
https://stackoverflow.com/questions/36799339/whats-the-difference-between-lock-and-reentrantlock-in-java-5
https://javarevisited.blogspot.com/2013/03/reentrantlock-example-in-java-synchronized-difference-vs-lock.html#axzz6dQCKLI2v
Phaser,
https://www.baeldung.com/java-phaser
https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Phaser.html
https://www.geeksforgeeks.org/java-util-concurrent-phaser-class-in-java-with-examples/
https://www.netjstech.com/2016/01/phaser-in-java-concurrency.html
Exhanger,
https://codecouple.pl/2018/12/14/exchanger-czyli-wymieniamy-obiekty-pomiedzy-watkami/
http://tutorials.jenkov.com/java-util-concurrent/exchanger.html
https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/Exchanger.html
https://www.baeldung.com/java-exchanger
https://javarevisited.blogspot.com/2020/04/how-to-use-exchanger-in-java-with-example.html#axzz6dQCKLI2v
https://www.geeksforgeeks.org/java-util-concurrent-exchanger-class-with-examples/
https://examples.javacodegeeks.com/core-java/util/concurrent/exchanger/java-util-concurrent-exchanger-example/
https://www.netjstech.com/2016/02/exchanger-in-java-concurrency.html
Jenkov,
http://tutorials.jenkov.com/java-concurrency/index.html
http://tutorials.jenkov.com/java-util-concurrent/index.html
Wyklady kalety,
Data vs Task parallelism,
https://www.tutorialspoint.com/data-parallelism-vs-task-parallelism
Structured Concurrency,
https://www.happycoders.eu/java/structured-concurrency-structuredtaskscope
https://www.baeldung.com/java-structured-concurrency
https://www.davidvlijmincx.com/posts/loom/jep_428_structured_concurrency
https://howtodoinjava.com/java/multi-threading/structured-concurrency
https://www.infoq.com/news/2022/06/java-structured-concurrency
Thread Pool,
https://softwaremill.com/threadpools-executors-and-java/
Active Object,
https://www.state-machine.com/active-object
https://medium.com/@maheshmaddi92/5-1-active-object-a08cd62c638e
https://medium.com/@nirajranasinghe/design-patterns-for-concurrent-programming-active-object-pattern-787075d25e83
https://en.wikipedia.org/wiki/Active_object
https://pl.wikipedia.org/wiki/Active_object
https://java-design-patterns.com/patterns/active-object/#benefits-and-trade-offs-of-active-object-pattern
https://java-design-patterns.com/patterns/active-object
Work Stealing Pool,
https://stackoverflow.com/questions/41337451/detailed-difference-between-java8-forkjoinpool-and-executors-newworkstealingpool
https://www.javaguides.net/2024/06/java-executors-newworkstealingpool.html
https://dzone.com/articles/diving-into-java-8s-newworkstealingpools
https://www.baeldung.com/java-work-stealing
https://medium.com/swlh/work-stealing-distilled-d2ed86d3065d
https://medium.com/@nathanbcrocker/building-a-multithreaded-work-stealing-task-scheduler-in-go-843861b878be
Rodzaje Watkow,
https://stackoverflow.com/questions/74639116/what-is-the-difference-between-green-threads-and-virtual-threads
https://docs.oracle.com/en/java/javase/19/docs/api/java.base/java/lang/Thread.html
https://stackoverflow.com/questions/72116652/what-exactly-makes-java-virtual-threads-better
https://www.infoq.com/articles/java-virtual-threads
https://en.wikipedia.org/wiki/Fiber_(computer_science)
https://graphitemaster.github.io/fibers
https://stackoverflow.com/questions/796217/what-is-the-difference-between-a-thread-and-a-fiber
https://www.baeldung.com/scala/cats-effect-fibers-concurrent-programming
https://en.wikipedia.org/wiki/Green_thread
https://softwareengineering.stackexchange.com/questions/254140/is-there-a-difference-between-fibers-coroutines-and-green-threads-and-if-that-i
https://stackoverflow.com/questions/3324643/processes-threads-green-threads-protothreads-fibers-coroutines-whats-the
https://zio.dev/reference/fiber
https://developers.redhat.com/blog/2019/06/19/project-loom-lightweight-java-threads#project_loom
https://stackoverflow.com/questions/15267269/green-threads-and-native-threads-in-java
https://stackoverflow.com/questions/5713142/green-threads-vs-non-green-threads
Rozne,
https://www.geeksforgeeks.org/inter-thread-communication-java/
http://tutorials.jenkov.com/java-concurrency/non-blocking-algorithms.html
https://en.wikipedia.org/wiki/Cooperative_multitasking
https://www.geeksforgeeks.org/difference-between-preemptive-and-cooperative-multitasking/
https://stackoverflow.com/questions/55703365/what-is-the-difference-between-cooperative-multitasking-and-preemptive-multitask
https://www.baeldung.com/java-threadlocal
https://jenkov.com/tutorials/java-concurrency/threadlocal.html
https://www.baeldung.com/java-completablefuture
https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletableFuture.html
https://www.baeldung.com/java-future
https://codecouple.pl/2018/04/06/completablefuture-dlaczego-po-co-jak/



https://javarevisited.blogspot.com/2014/07/top-50-java-multithreading-interview-questions-answers.html#axzz4jaJmaqbE
https://www.journaldev.com/1162/java-multithreading-concurrency-interview-questions-answers

book: Java Concurrency in practice | concurrency cookbook | https://medium.com/javarevisited/6-multithreading-and-concurrency-books-every-java-programmer-should-read-b6a08d2aae54

0_:::MICROSERVICES:::
Microservice vs monotlith,
https://microservices.io/patterns/microservices.html
https://www.geeksforgeeks.org/microservices-introduction/
https://www.geeksforgeeks.org/monolithic-vs-microservices-architecture/
https://medium.com/@goodrebels/to-go-or-not-to-go-micro-the-pros-and-cons-of-microservices-7967418ff06
https://cloudacademy.com/blog/microservices-architecture-challenge-advantage-drawback/
https://tsh.io/blog/basics-of-microservices-pros-and-cons/
https://martinfowler.com/articles/microservices.html
https://www.springboottutorial.com/creating-microservices-with-spring-boot-part-1-getting-started
https://searchapparchitecture.techtarget.com/tip/The-key-differences-between-stateless-and-stateful-microservices
https://blog.container-solutions.com/microservices-thinking-outside-monolith
https://dzone.com/articles/patterns-for-microservices-sync-vs-async
https://dzone.com/articles/design-patterns-for-microservices
DDD,
https://stackoverflow.com/questions/5325836/what-is-domain-driven-design
https://stackoverflow.com/questions/1222392/what-is-domain-driven-design-ddd/1222488#1222488
https://en.wikipedia.org/wiki/Domain-driven_design
https://microservices.io/patterns/data/domain-event.html
https://martinfowler.com/bliki/DomainDrivenDesign.html
https://martinfowler.com/bliki/DDD_Aggregate.html
https://vaadin.com/learn/tutorials/ddd/strategic_domain_driven_design
https://www.infoq.com/articles/ddd-in-practice/
https://threedots.tech/post/ddd-lite-in-go-introduction/
https://www.dddcommunity.org/learning-ddd/what_is_ddd/
https://blog.aspiresys.pl/technology/introduction-to-domain-driven-design/
https://www.geeksforgeeks.org/domain-driven-design-ddd/
https://simpleprogrammer.com/importance-domain-driven-design/
https://dzone.com/articles/an-introduction-to-domain-driven-design-and-its-be
https://airbrake.io/blog/software-design/domain-driven-design
https://www.informit.com/articles/article.aspx?p=1944876&seqNum=4
Resilience patters,
https://www.springcloud.io/post/2022-03/resilience-and-best-patterns/#gsc.tab=0
https://dzone.com/articles/circuit-breaker-pattern
https://medium.com/asos-techblog/improve-availability-and-resilience-of-your-micro-services-using-this-7-cloud-design-patterns-16006eaf32b1
https://www.jrebel.com/blog/microservices-resilience-patterns
https://searchapparchitecture.techtarget.com/tip/3-microservices-resiliency-patterns-for-better-reliability
https://blog.codecentric.de/en/2019/06/resilience-design-patterns-retry-fallback-timeout-circuit-breaker/
https://dzone.com/articles/libraries-for-microservices-development
https://dzone.com/articles/making-your-microservices-resilient-and-fault-tole-1
https://medium.com/@narengowda/what-is-circuitbreaking-in-microservices-2053f4f66882
https://docs.microsoft.com/en-us/azure/architecture/patterns/circuit-breaker
https://stackoverflow.com/questions/39622142/resilient-microservices-design-pattern
retry | timeout | curcuit breaker | bulkhead | stateless service | compensating transaction | throttling | rate limiter | health endpoint monitoring | load leveling | external configuration | correlation id
https://www.vinsguru.com/circuit-breaker-pattern/
https://www.vinsguru.com/timeout-pattern-microservice-design-patterns/
https://www.vinsguru.com/retry-pattern-microservice-design-patterns/
https://www.vinsguru.com/bulkhead-pattern-microservice-design-patterns/
https://docs.microsoft.com/en-us/azure/architecture/patterns/bulkhead
https://stackoverflow.com/questions/30391809/what-is-bulkhead-pattern-used-by-hystrix
https://akfpartners.com/growth-blog/bulkhead-pattern
https://stackoverflow.com/questions/60990475/what-is-the-difference-between-a-circuit-breaker-and-a-bulkhead-pattern
https://www.geeksforgeeks.org/bulkhead-pattern/
https://dzone.com/articles/resilient-microservices-pattern-bulkhead-pattern
https://badia-kharroubi.gitbooks.io/microservices-architecture/content/patterns/communication-patterns/bulkhead-pattern.html
https://medium.com/@sivaramansankar2019/bulkhead-pattern-in-microservices-spring-boot-example-d82db2c0cc5
https://www.vinsguru.com/rate-limiter-pattern/
https://use-cases.org/2020/04/23/differences-between-rate-limiting-and-throttling/
https://medium.com/@thisara.udaya/api-throttling-and-rate-limiting-4835ce901857
https://membrane-soa.org/service-proxy-doc/4.2/rate-limiting.htm
https://akfpartners.com/growth-blog/microservice-aggregator-pattern
https://medium.com/nerd-for-tech/design-patterns-for-microservices-aggregator-pattern-99c122ac6b73
https://medium.com/geekculture/design-patterns-for-microservices-aggregation-pattern-1b8994516fa2
Transaction patterns,
https://medium.com/swlh/handling-transactions-in-the-microservice-world-c77b275813e0
https://developers.redhat.com/blog/2018/10/01/patterns-for-distributed-transactions-within-a-microservices-architecture/
https://thorben-janssen.com/distributed-transactions-microservices/
Saga,
https://microservices.io/patterns/data/saga.html
https://dzone.com/articles/saga-pattern-how-to-implement-business-transaction-1
https://github.com/berndruecker/trip-booking-saga-java/blob/master/src/main/java/io/flowing/trip/saga/camunda/springboot/TripBookingSaga.java
https://medium.com/@ydorego/microservices-orchestration-vs-choreography-the-eternal-saga-d58c35e07d81
https://blog.couchbase.com/saga-pattern-implement-business-transactions-using-microservices-part/
https://java-design-patterns.com/patterns/saga/
Two Phase Commit,
https://stackoverflow.com/questions/7389382/two-phase-commit
https://medium.com/@sauravomar01/2pc-two-phase-commit-protocol-4ba47e441cdf
https://www.educative.io/edpresso/what-is-the-two-phase-commit-protocol
Deployment patterns,
https://microservices.io/patterns/
https://dzone.com/articles/right-strategies-for-microservices-deployment
https://www.nginx.com/blog/deploying-microservices/
https://circleci.com/blog/canary-vs-blue-green-downtime/
https://stackoverflow.com/questions/23746038/canary-release-strategy-vs-blue-green
https://www.statsig.com/perspectives/blue-green-vs-canary-deployment
https://semaphoreci.com/blog/deploy-microservices
https://www.gleecus.com/blogs/how-to-deploy-microservices/
https://dev.to/mquanit/deployment-approaches-in-microservices-37pb
https://dennylesmana.medium.com/microservices-deployment-patterns-ca1343c89e13
https://www.opslevel.com/resources/4-microservice-deployment-patterns-that-improve-availability
Api gateway,
https://medium.com/dev-genius/microservices-design-api-gateway-pattern-980e8d02bdd5
https://microservices.io/patterns/apigateway.html
https://www.nginx.com/learn/api-gateway/
https://codecouple.pl/2018/03/16/31-spring-boot-zuul-api-gateway/
Service Registration,
https://dzone.com/articles/getting-started-with-microservices-2
https://vaadin.com/learn/tutorials/microservices/service-registration-and-discovery
https://microservices.io/patterns/service-registry.html
https://microservices.io/patterns/self-registration.html
https://microservices.io/patterns/3rd-party-registration.html
https://www.nginx.com/blog/service-discovery-in-a-microservices-architecture/
CQRS,
https://microservices.io/patterns/data/cqrs.html
https://stackoverflow.com/questions/47048839/cqrs-and-event-sourcing-difference
https://stackoverflow.com/questions/60523277/event-sourcing-and-cqrs-what-did-i-missed
https://stackoverflow.com/questions/8820748/when-to-use-the-cqrs-design-pattern
https://community.risingstack.com/when-to-use-cqrs/
https://martinfowler.com/bliki/CQRS.html
https://stackoverflow.com/questions/33279680/what-are-the-disadvantages-of-using-event-sourcing-and-cqrs
https://www.infoq.com/news/2015/05/cqrs-advantages/
https://docs.microsoft.com/pl-pl/azure/architecture/patterns/cqrs
https://www.beautifulcode.co/blog/3-advantages-of-separating-command-query-responsibilities-for-a-dat
https://nexocode.com/blog/posts/cqrs-and-event-sourcing/
https://stackoverflow.com/questions/3234831/cqrs-synchronizing-the-write-and-read-databases
https://thenewstack.io/how-cqrs-works-with-spring-tools/
Event Sourcing,
https://microservices.io/patterns/data/event-sourcing.html
https://bulldogjob.pl/articles/122-cqrs-i-event-sourcing-czyli-latwa-droga-do-skalowalnosci-naszych-systemow_
https://socodeit.pl/2019/09/event-sourcing/
https://martinfowler.com/eaaDev/EventSourcing.html
https://www.euvic.pl/event-sourcing-bez-tajemnic/
https://eventuate.io/whyeventsourcing.html
https://docs.microsoft.com/pl-pl/azure/architecture/patterns/event-sourcing
https://softwaremill.com/entry-level-event-sourcing/
https://www.tinybird.co/blog-posts/event-sourcing-with-kafka
https://blog.consdata.tech/2018/11/15/czy-apache-kafka-nadaje-sie-do-event-sourcingu.html
https://www.confluent.io/blog/event-sourcing-using-apache-kafka/
SOA,
Architektura Hexagonalna,
https://www.jcommerce.pl/jpro/artykuly/porty-i-adaptery-w-praktyce
https://blog.allegro.tech/2020/05/hexagonal-architecture-by-example.html
https://netflixtechblog.com/ready-for-changes-with-hexagonal-architecture-b315ec967749
https://vaadin.com/blog/ddd-part-3-domain-driven-design-and-the-hexagonal-architecture
https://www.reddit.com/r/golang/comments/ti8bmh/where_to_put_dtos_mappers_and_validators/
https://www.professionalbeginner.com/the-dto-dilemma
https://www.clurgo.com/en/blog/how-to-develop-software-more-flexibly-with-hexagonal-architecture
https://medium.com/@skowron.dev/dive-deeper-with-ddd-hexagonal-architecture-in-symfony-33aa0424cc0f
https://matthiasnoback.nl/2022/09/is-it-a-dto-or-a-value-object/
https://stackoverflow.com/questions/31438286/ddd-which-layer-dto-should-be-implemented
https://stackoverflow.com/questions/6986032/difference-between-value-object-pattern-and-data-transfer-pattern
https://enterprisecraftsmanship.com/posts/dto-vs-value-object-vs-poco/
https://stackoverflow.com/questions/72025894/list-differences-dto-vo-entity-domain-model
https://www.nearshore-it.eu/technologies/using-hexagonal-architecture-ports-and-adapters-design-pattern/
https://stackoverflow.com/questions/21554977/should-services-always-return-dtos-or-can-they-also-return-domain-models
https://www.happycoders.eu/software-craftsmanship/hexagonal-architecture-java/
https://tbuss.de/posts/2023/9-how-to-do-the-package-structure-in-a-ports-and-adapter-architecture/
https://stackoverflow.com/questions/66971751/layers-in-hexagonal-architecture
Scalability,
https://searchdatacenter.techtarget.com/definition/scalability
https://medium.com/@Pointnity_Network/three-dimensions-of-distributed-system-scalability-design-8e0319163c8d
https://medium.com/swlh/building-scalable-distributed-systems-part-1-introduction-to-scalable-systems-9ca471fd77d7
https://www.math.unipd.it/~abujari/fis1819/lecSlides/scalability.pdf
https://stackoverflow.com/questions/34711353/two-questions-about-distributed-systems-scalability-and-mutual-exclusion
https://stackoverflow.com/questions/214246/what-does-scalability-mean-to-you
https://www.quora.com/What-is-scalable-system-in-distributed-system
https://stackoverflow.com/questions/63027668/is-distributed-systems-same-as-horizontal-scaling

https://microservices.io/



Books: microservices patterns

0_:::TESTOWANIE:::
Testy unit,
testy Integracyjne,
testy funkcjonalne,
testy E2E,

junit5, assertJ, mockito

Testy Ogolnie,
https://www.softwaretestinghelp.com/junit-test-fixture-with-examples/
https://www.browserstack.com/guide/smoke-testing
https://www.techtarget.com/searchsoftwarequality/definition/smoke-testing
https://www.globalapptesting.com/blog/the-ultimate-guide-to-smoke-testing
https://www.geeksforgeeks.org/smoke-testing-software-testing/
Piramida testow,
http://www.agilenutshell.com/episodes/41-testing-pyramid
https://www.baeldung.com/spring-test-pyramid-practical-example
https://martinfowler.com/articles/practical-test-pyramid.html
https://martinfowler.com/bliki/TestPyramid.html
https://medium.com/@mateuszroth/why-the-test-pyramid-is-a-bullshit-guide-to-testing-towards-modern-frontend-and-backend-apps-4246e89b87bd
https://medium.com/better-programming/the-test-pyramid-80d77535573
manual vs automated testing,
https://www.guru99.com/difference-automated-vs-manual-testing.html
https://dzone.com/articles/automated-testing-vs-manual-testing
https://www.testim.io/blog/test-automation-vs-manual-testing/
https://www.qamadness.com/manual-testing-vs-automated-testing/
blackbox testing,
https://softwaretestingfundamentals.com/black-box-testing/
https://www.imperva.com/learn/application-security/black-box-testing/
https://www.softwaretestinghelp.com/black-box-testing/
rodzaje testow,
https://www.guru99.com/load-testing-tutorial.html
https://www.guru99.com/performance-testing.html
https://www.guru99.com/scalability-testing.html
https://www.geeksforgeeks.org/software-testing-scalability-testing/
https://stackoverflow.com/questions/18950746/performance-stress-testing-java-ee-applications
https://www.softwaretestinghelp.com/performance-testing-tools-load-testing-tools/
https://www.geeksforgeeks.org/differences-between-black-box-testing-vs-white-box-testing/
https://www.geeksforgeeks.org/differences-between-white-box-testing-and-gray-box-testing/
https://www.geeksforgeeks.org/difference-between-black-box-testing-and-gray-box-testing/
https://www.javatpoint.com/black-box-testing-vs-white-box-testing-vs-grey-box-testing
https://www.javatpoint.com/acceptance-testing
narzedzia,
https://hackernoon.com/5-courses-java-programmers-can-join-to-learn-junit-and-mockito-in-2019-h74t38r4
https://www.softwaretestinghelp.com/performance-testing-tools-load-testing-tools/
https://www.guru99.com/performance-testing-tools.html
https://www.baeldung.com/rest-assured-tutorial

book: tdd teoria, https://javarevisited.blogspot.com/2014/08/top-5-books-to-learn-unit-testing-junit-tdd-Java-programmers.htm

0_:::WEB_FRAMEWORKS:::
:Spring,
https://stackoverflow.com/questions/7779509/setter-di-vs-constructor-di-in-spring/22033945
https://stackoverflow.com/questions/21218868/explain-why-constructor-inject-is-better-than-other-options
http://www.vinsguru.com/reactive-programming-a-simple-introduction/
https://docs.spring.io/spring-hateoas/docs/current/reference/html/#reference
http://olivergierke.de/2013/11/why-field-injection-is-evil/
https://stackoverflow.com/questions/9403155/what-is-dependency-injection-and-inversion-of-control-in-spring-framework
https://stackoverflow.com/questions/1099025/spring-transactional-what-happens-in-background
https://docs.spring.io/spring-framework/docs/4.2.x/spring-framework-reference/html/beans.html#beans-setter-injection
https://javarevisited.blogspot.com/2012/11/difference-between-setter-injection-vs-constructor-injection-spring-framework.html#axzz6e4gAepjG
https://stackoverflow.com/questions/17193365/what-in-the-world-are-spring-beans
https://stackoverflow.com/questions/44475523/how-to-understand-bean-in-spring
https://www.baeldung.com/spring-framework-design-patterns
https://www.e4developer.com/2018/03/30/introduction-to-concurrency-in-spring-boot/
https://www.baeldung.com/spring-framework-design-patterns
https://springframework.guru/gang-of-four-design-patterns/proxy-pattern/
https://dzone.com/articles/spring-and-threads-taskexecutor
https://docs.spring.io/spring-framework/docs/4.0.x/spring-framework-reference/html/overview.html
https://stackoverflow.com/questions/53579112/inject-list-of-all-beans-with-a-certain-interface/53579193
https://medium.com/@s.sreejith/proxy-in-spring-e21ffbb2953a
https://www.baeldung.com/spring-events
https://stackoverflow.com/questions/45884537/use-eventlistener-annotation-on-multiple-events-in-spring
https://medium.com/@AlexanderObregon/handling-events-in-spring-with-eventlistener-bff2375bd413
https://howtodoinjava.com/spring-core/how-to-publish-and-listen-application-events-in-spring/
https://reflectoring.io/spring-boot-application-events-explained/
https://www.baeldung.com/spring-context-events
https://medium.com/hprog99/mastering-events-in-spring-boot-a-comprehensive-guide-86348f968fc6
https://medium.com/@mohanakrishnakavali/different-request-parameters-in-spring-boot-rest-apis-8069abad47fd

:Spring webflux-reactor
https://stackoverflow.com/questions/45019486/threading-model-of-spring-webflux-and-reactor
https://dzone.com/articles/spring-webflux-eventloop-vs-thread-per-request-mod
https://piotrminkowski.com/2020/03/30/a-deep-dive-into-spring-webflux-threading-model/
https://www.baeldung.com/spring-webflux-concurrency
https://bykowski.pl/programowanie-reaktywne-czym-jest-i-kiedy-stosowac/
https://bykowski.pl/spring-webflux-programowanie-reaktywne-w-spring/
https://www.reactivemanifesto.org/
https://www.baeldung.com/spring-webflux
https://nullpointerexception.pl/spring-webflux-reaktywny-spring/
https://howtodoinjava.com/spring-webflux/spring-webflux-tutorial/
https://projectreactor.io/docs/core/release/reference/
https://dzone.com/articles/spring-webflux-eventloop-vs-thread-per-request-mod
https://piotrminkowski.com/2020/03/30/a-deep-dive-into-spring-webflux-threading-model/
https://www.e4developer.com/2018/03/30/introduction-to-concurrency-in-spring-boot/




books: pro spring 5
:Hibernate
https://stackoverflow.com/questions/5370482/whats-the-advantage-of-load-vs-get-in-hibernate
https://javarevisited.blogspot.com/2012/07/hibernate-get-and-load-difference-interview-question.html#axzz6dQCKLI2v
https://howtodoinjava.com/hibernate/lazy-loading-in-hibernate/
https://howtodoinjava.com/hibernate/understanding-hibernate-first-level-cache-with-example/
https://howtodoinjava.com/hibernate/how-hibernate-second-level-cache-works/
https://stackoverflow.com/questions/8046662/hibernate-opensession-vs-getcurrentsession
https://java2blog.com/difference-opensession-getcurrentsession-hibernate/
https://www.javatpoint.com/jpa-vs-hibernate
https://stackoverflow.com/questions/9881611/whats-the-difference-between-jpa-and-hibernate
https://dzone.com/articles/what-is-the-difference-between-hibernate-and-sprin-1
N+1 problem,
https://stackoverflow.com/questions/97197/what-is-the-n1-selects-problem-in-orm-object-relational-mapping
https://stackoverflow.com/questions/6838574/difference-between-left-join-and-left-join-fetch-in-hibernate
https://stackoverflow.com/questions/49118193/hibernate-left-join-fetch-with-multiple-columns-for-the-join
https://stackoverflow.com/questions/17431312/what-is-the-difference-between-join-and-join-fetch-when-using-jpa-and-hibernate
Lazy initalization exception,
https://thorben-janssen.com/lazyinitializationexception/
https://vladmihalcea.com/the-best-way-to-handle-the-lazyinitializationexception/
https://www.baeldung.com/hibernate-initialize-proxy-exception
https://stackoverflow.com/questions/21574236/how-to-fix-org-hibernate-lazyinitializationexception-could-not-initialize-prox
Inheritance w hibernate,
https://thorben-janssen.com/complete-guide-inheritance-strategies-jpa-hibernate/
https://www.baeldung.com/hibernate-inheritance
https://www.javatpoint.com/hibernate-inheritance-mapping-tutorial
https://vladmihalcea.com/the-best-way-to-use-entity-inheritance-with-jpa-and-hibernate/
optimistic/pesimitic locking,
Versioning,
https://www.journaldev.com/3633/hibernate-interview-questions-and-answers
https://www.edureka.co/blog/interview-questions/hibernate-interview-questions/
Entity graph,
https://jakarta.ee/learn/docs/jakartaee-tutorial/current/persist/persistence-entitygraphs/persistence-entitygraphs.html
https://medium.com/xebia-engineering/jpa-entity-graph-in-action-9800bd4f689d
https://www.baeldung.com/jpa-entity-graph
https://stackoverflow.com/questions/31703532/whats-the-goal-of-the-jpa-entity-graph

Books: hibernate in action 

Books: J2EE developer handbook | Core j2ee patterns – przejzec | 00 – przejrzec

0_:::WEBSERVICES:::
SOAP,
REST,
https://restfulapi.net/
https://www.mulesoft.com/resources/api/what-is-rest-api-design
https://blog.restcase.com/4-maturity-levels-of-rest-api-design/
https://searchapparchitecture.techtarget.com/definition/RESTful-API
https://stackoverflow.com/questions/671118/what-exactly-is-restful-programming
https://stackoverflow.com/questions/2190836/what-is-the-difference-between-http-and-rest
https://martinfowler.com/articles/richardsonMaturityModel.html
https://restfulapi.net/richardson-maturity-model/
https://bykowski.pl/hateoas-czym-jest-jak-wdrozyc-i-po-co-to-komu/
https://geek.justjoin.it/hateoas-api-moze-byc-lepsze
https://www.infoq.com/news/2009/04/hateoas-restful-api-advantages/
https://softwareengineering.stackexchange.com/questions/149124/what-is-the-benefit-of-hypermedia-hateoas
https://medium.com/@andreasreiser94/why-hateoas-is-useless-and-what-that-means-for-rest-a65194471bc8
https://varunpatil.me/blog/posts/hateoas/
https://stackoverflow.blog/2021/10/06/best-practices-for-authentication-and-authorization-for-rest-apis/
https://dzone.com/articles/four-most-used-rest-api-authentication-methods
https://www.javajee.com/introduction-to-authentication-in-java-ee-applications
RESTClient,
HTTP (jak dziala, statusy, odpowiedzi, filtry, servlety),
https://www.restapitutorial.com/httpstatuscodes.html
https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
https://pl.wikipedia.org/wiki/Hypertext_Transfer_Protocol
https://stackoverflow.com/questions/18709834/http-status-424-or-500-for-error-on-external-dependency
https://en.wikipedia.org/wiki/HTTP
https://raw.githubusercontent.com/for-GET/http-decision-diagram/master/httpdd.fsm.png
https://stackoverflow.com/questions/2342579/http-status-code-for-update-and-delete
https://stackoverflow.com/questions/15839114/restful-soft-delete
https://stackoverflow.com/questions/70192494/http-status-code-202-vs-200-for-a-post-request
https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE
https://medium.com/codenx/understanding-the-lesser-known-http-methods-head-options-trace-and-connect-af4311e63781
https://stackoverflow.com/questions/61951373/use-case-of-options-trace-and-head-request-method
https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/CONNECT
https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/HEAD
https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/OPTIONS
https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/TRACE
https://www.theserverside.com/blog/Coffee-Talk-Java-News-Stories-and-Opinions/HTTP-methods
https://stackoverflow.com/questions/18709834/http-status-424-or-500-for-error-on-external-dependency
https://security.stackexchange.com/questions/203396/whats-the-security-concern-of-browsers-using-the-http-connect-method
https://serverfault.com/questions/185523/impact-of-http-connect-on-a-mandatory-web-proxy-policy
https://stackoverflow.com/questions/11697943/when-should-one-use-connect-and-get-http-methods-at-http-proxy-server
https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS
Webhooks,
https://www.contentful.com/developers/docs/concepts/webhooks/
https://hookdeck.com/webhooks/guides/when-to-use-webhooks#examples-of-sites-that-use-webhooks
https://webhooks.fyi/docs/webhook-primer
https://codeopinion.com/building-a-webhooks-system-with-event-driven-architecture/
https://ably.com/topic/webhooks
Internetowe,
https://www.journaldev.com/1907/java-session-management-servlet-httpsession-url-rewriting
https://hazelcast.com/glossary/web-session/
https://stackoverflow.com/questions/3467114/how-are-cookies-passed-in-the-http-protocol
https://humanwhocodes.com/blog/2009/05/05/http-cookies-explained/
https://en.wikipedia.org/wiki/Cross-site_request_forgery
https://en.wikipedia.org/wiki/Cross-site_scripting
https://blog.sean-wright.com/session-management-client-side-vs-server-side/
https://mansfeld.pl/bezpieczenstwo/cors-co-to-jest-jak-obejsc-ajax/
https://sekurak.pl/czym-jest-cors-cross-origin-resource-sharing-i-jak-wplywa-na-bezpieczenstwo/
https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS

Books: J2EE essentials | Java Web Services

0_:::MESSAGING:::
JMS,persistent vs nonpersistent | pub sub vs ptp | problem | queue vs topic,
JMS vs Kafka,
https://www.knowledgenile.com/blogs/apache-kafka-vs-jms
http://cloudurable.com/blog/kafka-vs-jms/index.html
https://stackoverflow.com/questions/42664894/jms-vs-kafka-in-specific-conditions
https://www.oracle.com/technical-resources/articles/java/intro-java-message-service.html
Kafka vs REST,
https://medium.com/@vikalprusia/kafka-vs-http-757c6d49e23
https://stackoverflow.com/questions/57852689/kafka-msg-vs-rest-calls
Integration patterns,
https://www.javacodegeeks.com/2012/11/introduction-to-enterprise-integration-patterns.html
https://dzone.com/articles/introduction-to-integration-patterns
https://www.enterpriseintegrationpatterns.com/patterns/messaging/Introduction.html


0_:::FUNCTIONAL_PROGRAMMING:::
Fp ogolnie,
https://www.tutorialspoint.com/functional_programming/functional_programming_introduction.htm
https://medium.com/javascript-scene/master-the-javascript-interview-what-is-functional-programming-7f218c68b3a0
https://en.wikipedia.org/wiki/Functional_programming
https://en.wikipedia.org/wiki/First-class_function
https://en.wikipedia.org/wiki/Pure_function
https://en.wikipedia.org/wiki/Side_effect_(computer_science)
https://www.geeksforgeeks.org/functional-programming-paradigm/
https://wiki.haskell.org/Functional_programming
https://wiki.haskell.org/Partial_functions
https://serokell.io/blog/introduction-to-functional-programming
https://medium.com/virtuslab/oop-vs-fp-the-pursuit-of-extensibility-part-1-31029591c3b4
https://nrinaudo.github.io/scala-best-practices/definitions/referential_transparency.html
https://en.wikipedia.org/wiki/Referential_transparency
https://www.sitepoint.com/what-is-referential-transparency/
https://lispcast.com/what-is-a-total-function/
https://softwareengineering.stackexchange.com/questions/334874/in-the-context-of-functional-programming-what-are-total-functions-and-partia
https://en.wikipedia.org/wiki/Total_functional_programming
Pros and cons of functional programming,
https://spin.atomicobject.com/2019/08/29/functional-prog-pros-cons/
https://www.researchgate.net/post/What-are-the-advantages-and-disadvantages-of-functional-programming
https://syndicode.com/blog/pros-and-cons-of-functional-programming/
https://www.quora.com/What-are-the-advantages-of-functional-programming-over-object-oriented-programming-What-are-some-languages-that-are-mainly-functional
https://hackr.io/blog/functional-programming
https://blog.knoldus.com/functional-programming-a-paradigm/
http://alvinalexander.com/scala/fp-book/benefits-of-functional-programming/
https://alvinalexander.com/scala/fp-book/disadvantages-of-functional-programming/
Fp for concurrency,
https://softwareengineering.stackexchange.com/questions/310159/is-functional-programming-faster-in-multithreading-because-i-write-things-differ
https://www.quora.com/Why-does-functional-programming-favor-concurrency
https://freecontent.manning.com/the-foundations-of-functional-concurrency/
https://dzone.com/articles/java-using-immutable-classes-for-concurrent-programming
https://stackoverflow.com/questions/214714/mutable-vs-immutable-objects
Monads,
https://blog.knoldus.com/understanding-monads-an-introduction/
https://stackoverflow.com/questions/14576543/why-can-applicative-functors-have-side-effects-but-functors-cant
https://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html
https://medium.com/@lettier/your-easy-guide-to-monads-applicatives-functors-862048d61610
https://stackoverflow.com/questions/44965/what-is-a-monad
https://stackoverflow.com/questions/35698485/how-is-list-a-monad
https://medium.com/@michelestieven/a-monad-is-just-a-monoid-a02bd2524f66
Lazy evauluation,
https://www.tutorialspoint.com/functional_programming/functional_programming_lazy_evaluation.htm
https://stackoverflow.com/questions/265392/why-is-lazy-evaluation-useful
https://www.learningjournal.guru/article/scala/functional-programming/non-strict-lazy-evaluations-in-functional-programming/
https://stackoverflow.com/questions/24704503/lazy-evaluation-why-is-it-faster-advantages-vs-disadvantages-mechanics-why-i
https://www.geeksforgeeks.org/scala-lazy-evaluation/
https://softwareengineering.stackexchange.com/questions/124500/why-isnt-lazy-evaluation-used-everywhere
Higher order functions,
https://www.magicweb.pl/programowanie/programowanie-funkcyjne-higher-order-functions/
https://docs.scala-lang.org/tour/higher-order-functions.html
Closures,
https://stackoverflow.com/questions/36636/what-is-a-closure
https://stackoverflow.com/questions/220658/what-is-the-difference-between-a-closure-and-a-lambda
https://stackoverflow.com/questions/40089429/the-place-of-closures-in-functional-programming
https://softwareengineering.stackexchange.com/questions/40454/what-is-a-closure
https://medium.com/beginners-guide-to-mobile-web-development/closures-in-functional-programming-and-javascript-3ed730e08fc2
https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-closure-b2f0d2152b36
Functional programming patterns,
https://github.com/caiorss/Functional-Programming/blob/master/haskell/Functional_Programming_Concepts.org
https://spin.atomicobject.com/2019/08/22/functional-programming-patterns/
https://www.freecodecamp.org/news/functional-programming-patterns-cookbook-3a0dfe2d7e0a/
https://www.slideshare.net/ScottWlaschin/fp-patterns-buildstufflt
https://www.quora.com/What-are-some-functional-programming-design-patterns
https://csmith111.gitbooks.io/functional-reactive-programming-with-elm/content/FPpatterns.html
Tail recursion,
http://www.cs.sjsu.edu/faculty/pearce/modules/lectures/scala/functions/Recursion.htm
https://alvinalexander.com/scala/fp-book/recursion-jvm-stacks-stack-frames/
https://alvinalexander.com/scala/fp-book/recursion-visual-look-jvm-stack-frames/
https://www.baeldung.com/scala/loops-functional-scala
https://rd.nz/2009/04/tail-calls-tailrec-and-trampolines.html
https://stackoverflow.com/questions/310974/what-is-tail-call-optimization
https://medium.com/@mattmichihara/scala-tail-call-optimization-f853b8f295dc
https://stackoverflow.com/questions/31303708/what-is-the-time-and-space-complexity-of-a-scalas-head-tail-extractor
https://stackoverflow.com/questions/12496959/summing-values-in-a-list
https://alvinalexander.com/scala/scala-recursion-examples-recursive-programming/
https://www.artima.com/pins1ed/functions-and-closures.html#i-170392618-1
Tail Recursion Discussions,
https://stackoverflow.com/questions/2651112/is-recursion-ever-faster-than-looping
https://stackoverflow.com/questions/72209/recursion-or-iteration
https://softwareengineering.stackexchange.com/questions/149167/are-functional-languages-better-at-recursion
Monad vs Applicative,
https://stackoverflow.com/questions/17409260/what-advantage-does-monad-give-us-over-an-applicative
https://stackoverflow.com/questions/45252709/what-is-the-difference-between-a-functor-and-a-monad
https://stackoverflow.com/questions/23342184/difference-between-monad-and-applicative-in-haskell
https://hackernoon.com/functor-applicative-and-monads-fp1e32eh
https://www.tobyhobson.com/posts/cats/applicatives-vs-monads/
https://stackoverflow.com/questions/14576543/why-can-applicative-functors-have-side-effects-but-functors-cant
Monad doesnt compose,
https://stackoverflow.com/questions/7040844/applicatives-compose-monads-dont
https://blog.tmorris.net/posts/monads-do-not-compose/
https://www.reddit.com/r/haskell/comments/111y0vy/monads_doesnt_compose_well_why/
Monad is monoid in the category of endofunctors,
https://blog.softwaremill.com/monoid-in-the-category-of-endofunctors-b85bab43587b
https://stackoverflow.com/questions/3870088/a-monad-is-just-a-monoid-in-the-category-of-endofunctors-whats-the-problem
https://blog.rockthejvm.com/monads-are-monoids-in-the-category-of-endofunctors/
https://stackoverflow.com/questions/10342876/differences-between-functors-and-endofunctors
https://www.reddit.com/r/math/comments/ap25mr/a_monad_is_a_monoid_in_the_category_of
https://ncatlab.org/nlab/show/endofunctor

0_:::SCALA:::
Scala ogolnie,
https://stackoverflow.com/questions/1345713/what-are-the-benefits-of-scala
https://www.quora.com/Why-should-a-Java-developer-consider-switching-to-Scala?q=scala%20java
https://www.quora.com/Is-the-Scala-language-better-than-Java
https://www.quora.com/What-are-the-advantages-of-Scala-over-Java-functional-programming
https://www.educba.com/scala-vs-java/
https://jaxenter.com/5-reasons-why-scala-is-better-than-java-130863.html
https://www.bti360.com/scala-vs-java-8-in-a-java-8-world/
https://www.infoq.com/articles/java-8-vs-scala/
https://blog.outsource2india.com/the-advantages-of-using-scala/
https://softwareengineering.stackexchange.com/questions/130335/why-is-scala-more-scalable-than-other-languages
https://data-flair.training/blogs/scala-advantages/
Pattern Matching,
https://stackoverflow.com/questions/38853449/why-cant-i-apply-pattern-matching-against-non-case-classes
https://www.baeldung.com/scala/pattern-matching
https://blog.shangjiaming.com/scala%20tutorial/pattern-match/
https://stackoverflow.com/questions/20748858/pattern-matching-symbol
For Comprehensions,
https://www.baeldung.com/scala/for-comprehension
https://stackoverflow.com/questions/7949785/scalas-for-comprehension-if-statements
https://stackoverflow.com/questions/43534499/for-comprehension-with-conditions
https://alvinalexander.com/scala/how-to-for-loop-embedded-if-statements-guards-scala/
https://stackoverflow.com/questions/4192227/how-can-i-do-if-else-inside-a-for-comprehension
TypeClass,
https://blog.knoldus.com/getting-started-with-scala-cats/
https://medium.com/virtuslab/typeclasses-scala-be35c0ef0ee9
https://alvinalexander.com/scala/fp-book/type-classes-101-introduction/
https://scalac.io/typeclasses-in-scala/
https://gist.github.com/anonymous/b3bac2b3a2614c35b14365e2a0823a55
https://medium.com/@kolemannix/an-introduction-to-typeclasses-in-scala-26d4dc5fdf58
https://www.baeldung.com/scala/type-classes
Pararellism,
https://www.baeldung.com/scala/parallel-collections
https://engineering.zalando.com/posts/2017/04/parallel-computing-with-scala.html
https://medium.com/@PerrottaFrancisco/concurrent-programming-data-parallel-parallel-collections-with-scala-903f13988c1e
Scala lazy val performance,
https://stackoverflow.com/questions/4095170/scala-lazy-values-performance-penalty-threadsafe
https://stackoverflow.com/questions/3041253/whats-the-hidden-cost-of-scalas-lazy-val
http://code-o-matic.blogspot.com/2009/05/double-checked-locking-idiom-sweet-in.html
Higher kinded type,
https://www.baeldung.com/scala/higher-kinded-types
https://medium.com/bigpanda-engineering/understanding-f-in-scala-4bec5996761f
https://stackoverflow.com/questions/49762658/difference-between-f-and-ft-in-scala-when-used-in-type-constructors
https://www.47deg.com/blog/what-is-F-with-hole-in-scala/#what-is-a-type-constructor-_-or-a-higher-kinded-type-2
https://typelevel.org/blog/2016/08/21/hkts-moving-forward.html
Scala3,
https://medium.com/@sinisalouc/whats-new-in-scala-3-28d9c11eec30
https://docs.scala-lang.org/scala3/reference/index.html#
* Collections,
https://alvinalexander.com/scala/collection-scala-flatmap-examples-map-flatten/
https://alvinalexander.com/scala/how-to-filter-map-filterkeys-retain-scala-cookbook
https://stackoverflow.com/questions/26402276/when-applying-filter-to-a-scala-map-how-can-i-also-check-what-entries-were-remo
https://alvinalexander.com/scala/scala-immutable-map-class-methods-examples-syntax/
https://alvinalexander.com/scala/how-to-add-update-remove-elements-immutable-maps-scala/
https://stackoverflow.com/questions/37070203/understanding-foldleft-with-map-instead-of-list
https://alvinalexander.com/scala/how-to-append-prepend-items-vector-seq-in-scala/
https://stackoverflow.com/questions/7794063/appending-an-element-to-the-end-of-a-list-in-scala
https://www.baeldung.com/scala/array-append-element
https://stackoverflow.com/questions/5636717/what-is-an-idiomatic-scala-way-to-remove-one-element-from-an-immutable-list
https://www.includehelp.com/scala/how-to-delete-elements-from-a-list-in-scala.aspx
https://alvinalexander.com/scala/how-to-delete-elements-from-list-listbuffer-scala-cookbook/
https://stackoverflow.com/questions/32431729/how-to-efficient-copy-an-array-to-another-in-scala
https://stackoverflow.com/questions/17828431/convert-scalas-list-into-map-with-indicies-as-keys
https://www.includehelp.com/scala/how-to-convert-list-to-map-in-scala.aspx
https://users.scala-lang.org/t/list-to-map-conversion/5366
https://stackoverflow.com/questions/6364468/how-to-iterate-scala-map
https://www.baeldung.com/scala/iterate-map
* ADT,
https://code.egym.de/a-brief-introduction-to-the-algebra-of-types-df92f0820e5
https://stanford-cs242.github.io/f19/lectures/03-2-algebraic-data-types.html
https://stackoverflow.com/questions/74961117/difference-between-type-class-and-algebraic-data-types
https://www.baeldung.com/scala/algebraic-data-types
https://en.wikipedia.org/wiki/Algebraic_data_type
https://stackoverflow.com/questions/44991429/what-is-an-algebraic-data-type-adt
* AST,
https://en.wikipedia.org/wiki/Abstract_syntax_tree
https://www.twilio.com/blog/abstract-syntax-trees
https://dev.to/balapriya/abstract-syntax-tree-ast-explained-in-plain-english-1h38
https://medium.com/@dinis.cruz/ast-abstract-syntax-tree-538aa146c53b
https://www.baeldung.com/scala/scala2-macros
* Fold,
https://stackoverflow.com/questions/24232235/implementation-of-foldleft-in-scala
https://medium.com/@mohitdaxini75/scala-fold-functions-74d9d4c088a7
https://coderwall.com/p/4l73-a/scala-fold-foldleft-and-foldright
https://www.educba.com/scala-foldleft/
https://avapl.github.io/posts/understanding-scala-folds/
https://allaboutscala.com/tutorials/chapter-8-beginner-tutorial-using-scala-collection-functions/scala-fold-example/
https://allaboutscala.com/tutorials/chapter-8-beginner-tutorial-using-scala-collection-functions/scala-foldleft-example/
https://allaboutscala.com/tutorials/chapter-8-beginner-tutorial-using-scala-collection-functions/scala-foldright-example/
https://nurkiewicz.com/2012/04/secret-powers-of-foldleft-in-scala.html
https://www.geeksforgeeks.org/what-are-folding-lists-in-scala/
https://medium.com/@alexshapovalov95/how-to-foldleft-foldright-in-scala-43934b95e868
https://www.baeldung.com/scala/foldleft-vs-reduceleft
https://blog.lunatech.com/posts/2022-07-11-foldleft-introduction-en
https://blog.knoldus.com/scalas-fold-foldleft-and-foldright-functions-a-comprehensive-guide/
https://tutorials.ducatindia.com/scala/scala-foldleft
https://github.com/alexland/foldLeft-in-scala
Rozne,
https://github.com/Baeldung/scala-tutorials/tree/master/scala-core-fp
https://stackoverflow.com/questions/60128207/whats-the-difference-between-lazylist-and-stream-in-scala
https://blog.knoldus.com/getting-lazy-with-scala/
https://stackoverflow.com/questions/8000903/what-are-all-the-uses-of-an-underscore-in-scala
https://stackoverflow.com/questions/1791408/what-is-the-difference-between-a-var-and-val-definition-in-scala
https://stackoverflow.com/questions/214714/mutable-vs-immutable-objects
https://docs.scala-lang.org/overviews/collections/overview.html
https://www.baeldung.com/scala/mutability
https://blog.knoldus.com/scala-map-vs-flatmap/
https://stackoverflow.com/questions/26140757/what-to-choose-between-require-and-assert-in-scala
https://www.geeksforgeeks.org/scala-preconditionsassert-assume-require-ensuring/
https://alvinalexander.com/scala/differences-java-thread-vs-scala-future/
https://stackoverflow.com/questions/12519894/explain-some-scala-code-beginner
https://stackoverflow.com/tags/scala/info
https://docs.scala-lang.org/scala3/book/types-adts-gadts.html
https://blog.rockthejvm.com/scala-variance-positions/
https://stackoverflow.com/questions/64780262/covariance-and-contravariance-in-scala
https://code.likeagirl.io/scala-variances-covariance-contravariance-and-invariance-67cc0c4fdc84
https://type-class.com/2017/07/13/covariant-and-contravariant-in-scala/
https://blog.rockthejvm.com/semigroups-and-monoids-in-scala/
https://alvinalexander.com/scala/sbt-how-to-compile-run-package-scala-project/
https://alvinalexander.com/scala/how-use-fold-scala-option-some-none-syntax/
https://alvinalexander.com/scala/how-to-split-sequences-subsets-groupby-partition-scala-cookbook/
https://stackoverflow.com/questions/52543048/how-to-group-by-keys-in-a-list
https://stackoverflow.com/questions/29779135/what-is-the-difference-between-try-and-either
https://blog.shangjiaming.com/scala%20tutorial/type-classes/
https://stackoverflow.com/questions/33074000/scala-string-vs
https://stackoverflow.com/questions/31064753/how-to-pass-scala-array-into-scala-vararg-method
https://www.baeldung.com/scala/string-comparison
https://stackoverflow.com/questions/45531198/warnings-while-building-scala-spark-project-with-sbt
https://stackoverflow.com/questions/1320139/why-is-appending-to-a-list-bad
https://stackoverflow.com/questions/24268388/scala-does-optionboolean-makes-sense

Implicit,
https://alvinalexander.com/scala/scala-2.10-implicit-class-example/
https://www.baeldung.com/scala/implicit-classes
https://docs.scala-lang.org/overviews/core/implicit-classes.html
https://docs.scala-lang.org/tour/implicit-parameters.html
https://stackoverflow.com/questions/50593346/implicit-functions-in-scala-how-is-this-working
https://docs.scala-lang.org/tour/implicit-conversions.html
Hierarchia klas,
https://docs.scala-lang.org/tour/unified-types.html
Case classes vs classes,
https://stackoverflow.com/questions/2312881/what-is-the-difference-between-scalas-case-class-and-class
Sealed,
https://www.baeldung.com/scala/sealed-keyword
https://www.geeksforgeeks.org/scala-sealed-trait/
Currying partial functions,
https://dzone.com/articles/difference-between-currying-amp-partially-applied
https://alvinalexander.com/scala/fp-book/partially-applied-functions-currying-in-scala/
https://stackoverflow.com/questions/46347879/best-use-cases-for-currying-functions-and-partially-applied-functions-in-scala
https://medium.com/@nagarjun_nagesh/currying-and-partial-application-in-java-108d03ea845c

https://docs.scala-lang.org/
https://www.geeksforgeeks.org/scala-programming-language/

https://www.journaldev.com/8958/scala-interview-questions-answers
https://www.journaldev.com/8960/scala-advanced-interview-questions
https://www.journaldev.com/9663/scala-interview-questions

Books: programming in scala | scala cookbook | funtional programming in scala |building applications with scala | Learning Concurrent Programming in Scala | https://softwareengineering.stackexchange.com/questions/89273/where-are-all-the-functional-programming-design-patterns
https://leanpub.com/pfhais/read
https://books.underscore.io/scala-with-cats/scala-with-cats.html
https://books.underscore.io/essential-scala/essential-scala.html

Scalaz:
https://leanpub.com/fpmortals-pl/read
http://eed3si9n.com/learning-scalaz/index.html

Cats:
https://www.baeldung.com/scala/cats-effects-intro
https://blog.knoldus.com/a-quick-start-to-cats-library/
https://typelevel.org/cats/datatypes.html
https://typelevel.org/cats/
https://typelevel.org/cats-effect/
https://typelevel.org/cats/nomenclature.html
https://typelevel.org/cats/typelevelEcosystem.html
https://medium.com/@TamasPolgar/hack-how-to-use-scala-futures-with-cats-io-9278c7febc37
https://degoes.net/articles/only-one-io
https://typelevel.org/cats-effect/docs/getting-started
https://medium.com/virtuslab/meow-start-using-cats-in-your-project-right-now-91737e3b8af4
https://blog.softwaremill.com/monad-transformers-and-cats-3-tips-for-beginners-196fabe58daa
https://typelevel.org/cats/typeclasses/traverse.html
https://bszwej.medium.com/composable-resource-management-in-scala-ce902bda48b2
https://typelevel.org/blog/2018/04/13/rethinking-monaderror.html
https://bow-swift.io/api-docs/Classes/EitherT.html
https://freesoft.dev/program/169798302
https://typelevel.org/cats/datatypes/kleisli.html
Cats docs,
https://typelevel.org/cats-effect/docs/2.x/concurrency/basics
https://typelevel.org/cats-effect/docs/2.x/concurrency/deferred
https://typelevel.org/cats-effect/docs/2.x/concurrency/mvar
https://stackoverflow.com/questions/64765566/effectful-update-of-ref-mvar
https://typelevel.org/cats-effect/docs/2.x/concurrency/ref
https://typelevel.org/cats-effect/docs/2.x/concurrency/semaphore
https://typelevel.org/cats-effect/docs/2.x/guides/tutorial
https://typelevel.org/cats-effect/docs/2.x/typeclasses/overview
https://typelevel.org/cats-effect/docs/2.x/datatypes/io
https://typelevel.org/cats-effect/docs/2.x/datatypes/fiber
https://typelevel.org/cats-effect/docs/2.x/datatypes/resource
https://typelevel.org/cats-effect/docs/2.x/datatypes/contextshift
https://typelevel.org/cats-effect/docs/2.x/datatypes/timer
https://typelevel.org/cats-effect/docs/2.x/datatypes/ioapp
https://typelevel.org/cats-effect/docs/concepts
https://typelevel.org/cats-effect/docs/tutorial
https://typelevel.org/cats-effect/docs/thread-model
https://typelevel.org/cats-effect/docs/schedulers
https://typelevel.org/cats-effect/docs/core/starvation-and-tuning
https://typelevel.org/cats-effect/docs/core/io-local
https://typelevel.org/cats-effect/docs/typeclasses
https://typelevel.org/cats-effect/docs/typeclasses/spawn
https://typelevel.org/cats-effect/docs/typeclasses/concurrent
https://typelevel.org/cats-effect/docs/typeclasses/temporal
https://typelevel.org/cats-effect/docs/typeclasses/sync
https://typelevel.org/cats-effect/docs/typeclasses/async
https://typelevel.org/cats-effect/docs/faq
https://typelevel.org/cats-effect/docs/std/atomic-cell
https://typelevel.org/cats-effect/docs/std/backpressure
https://typelevel.org/cats-effect/docs/std/dispatcher
https://typelevel.org/cats-effect/docs/std/hotswap
https://typelevel.org/cats-effect/docs/std/supervisor
Cats concurrency,
https://www.baeldung.com/scala/cats-effect-fibers-concurrent-programming
https://typelevel.org/blog/2020/10/30/concurrency-in-ce3.html
https://blog.rockthejvm.com/cats-effect-fibers/
https://typelevel.org/blog/2021/02/21/fibers-fast-mkay.html
https://blog.softwaremill.com/cats-concurrency-basics-with-ref-and-deferred-399e0335630
https://softwaremill.com/concurrency-with-cats-effect/
https://yadukrishnan.live/synchronisation-and-concurrent-access-in-cats-effect-3-part-7
Cats what is effect,
https://www.inner-product.com/posts/what-is-an-effect/
https://alvinalexander.com/scala/what-effects-effectful-mean-in-functional-programming/
Cats contexts description,
https://daenyth.github.io/intro-cats-effect/#1
https://github.com/peknight/demo/tree/master/demo-fp
Cats advanced monads,
https://typelevel.org/cats/datatypes/writer.html
https://www.baeldung.com/scala/writer-monad-in-cats
https://www.tobyhobson.com/posts/cats/writer-monad/
https://typelevel.org/cats/datatypes/state.html
https://typelevel.org/cats/datatypes/kleisli.html
https://edward-huang.com/functional-programming/scala/cats/monad/tech/2020/01/29/how-to-set-up-your-own-dependency-injection-with-reader/
https://blog.softwaremill.com/kleisli-category-from-theory-to-cats-fbd140bf396e
https://medium.com/@supermanue/understanding-kleisli-in-scala-9c42ec1a5977
https://blog.ssanj.net/posts/2017-06-07-composing-monadic-functions-with-kleisli-arrows.html
https://www.freecodecamp.org/news/monadic-composition-and-kleisli-arrows-1d96979bb32/
https://typelevel.org/cats/typeclasses/semigroup.html
https://www.tobyhobson.com/posts/cats/semigroups/
https://levelup.gitconnected.com/diving-into-scala-cats-semigroups-732ef2432042
https://typelevel.org/cats/typeclasses/monad.html
https://typelevel.org/cats/typeclasses/monoid.html
https://www.tobyhobson.com/posts/cats/monoids/
https://typelevel.org/cats/datatypes/nested.html
Cats freemonads,
https://typelevel.org/cats/datatypes/freemonad.html
https://levelup.gitconnected.com/functional-dynamic-programming-scala-cats-and-free-monad-b71c34c209
https://github.com/mtumilowicz/scala-cats-free-monad-workshop
https://underscore.io/blog/posts/2015/04/14/free-monads-are-simple.html
https://medium.com/@agaro1121/free-monad-vs-tagless-final-623f92313eac
https://blog.rockthejvm.com/free-monad/
https://scalac.io/blog/free-monad-cats-overview/
https://stackoverflow.com/questions/46766192/what-is-the-advantage-of-free-monads-over-plain-old-traits-with-io-monads
https://stackoverflow.com/questions/45039766/different-between-eff-monad-and-free-monad
https://stackoverflow.com/questions/28186297/composing-free-monads-in-scala
https://www.slideshare.net/hermannhueck/composing-an-app-with-free-monads-using-cats
Cats work stealing pool,
https://medium.com/iadvize-engineering/multiprocessing-on-the-jvm-scala-understanding-the-benefits-of-cats-effect-60bc403a67e1
https://en.wikipedia.org/wiki/Work_stealing
https://lightrun.com/answers/typelevel-cats-effect-different-exception-handling-on-the-work-stealing-runtime-compared-to-a-fixed-thread-executor
https://publications.lib.chalmers.se/records/fulltext/219016/219016.pdf
Cats rozne,
https://rockthejvm.com/p/cats-effect/
https://impurepics.com/posts/2018-07-13-referential-transparency-wild.html
https://softwaremill.com/practical-guide-to-error-handling-in-scala-cats-and-cats-effect/
https://betterprogramming.pub/functional-programming-anti-patterns-in-scala-23e57a7b9394
https://itnext.io/benefits-of-identity-monad-in-scala-cats-a2cb0baef639
https://yadukrishnan.live/cats-effect-3-for-beginners-part-1
https://yadukrishnan.live/lazy-and-eager-computations-in-cats-using-eval
https://yadukrishnan.live/common-apis-cats-effect-io-part-2
https://yadukrishnan.live/traversing-cats-effect-ios-part-3
https://yadukrishnan.live/common-operators-in-cats-effect-3-part-8
https://yadukrishnan.live/cancellation-of-iofiber-in-cats-effect-3-part-6
https://stackoverflow.com/questions/55953037/how-to-parse-dynamic-json-with-circe
https://gist.github.com/Daenyth/e7ed8ca548b7f60cfeb924eb0e9a8811
https://medium.com/@PerrottaFrancisco/foldable-and-traverse-with-scala-and-cats-bf4e5ab08b5b
https://typelevel.org/blog/2018/06/07/shared-state-in-fp.html
https://stackoverflow.com/questions/50354729/eagerly-evaluate-and-forget-behavior-for-cats-effect-io

Monix:
https://monix.io/
https://scalac.io/blog/monix-why-you-should-care-about/
http://www.beyondthelines.net/programming/futures-vs-tasks/
https://www.slideshare.net/hermannhueck/future-vs-monix-task

ZIO:
https://zio.dev/overview/getting-started
https://degoes.net/articles/zio-cats-effect
https://softwaremill.com/cats-effect-vs-zio/
https://softwaremill.com/getting-started-with-zio-part-1/
https://softwaremill.com/structuring-zio-2-applications/

http4s:
https://blog.shangjiaming.com/scala%20tutorial/http4s-introduction-2/
https://github.com/http4s/http4s/issues/2718
https://http4s.org/v0.20/auth/
https://github.com/cognitedata/http4s/blob/a7e2fc108de12f7b111d688d33288c20f6a5a085/server/src/test/scala/org/http4s/server/middleware/authentication/AuthMiddlewareSpec.scala#L211
https://stackoverflow.com/questions/58446033/how-to-combine-authedroutes-and-httproutes-in-http4s
https://stackoverflow.com/questions/75019894/pattern-type-is-incompatible-with-expected-type
https://blog.rockthejvm.com/scala-http4s-authentication/

Requests:
https://github.com/lihaoyi/requests-scala
https://www.lihaoyi.com/post/HowtoworkwithHTTPJSONAPIsinScala.html
http://www.lihaoyi.com/upickle/#uJson

Libraries:
https://blog.softwaremill.com/figuring-out-scala-functional-programming-libraries-af8230efccb4
https://github.com/oleg-py/better-monadic-for#define-implicits-in-for-comprehensions-or-matches
https://timwspence.github.io/cats-stm/index.html
https://tpolecat.github.io/doobie/docs/04-Selecting.html
https://typelevel.org/cats-mtl/getting-started.html
https://www.baeldung.com/scala/monocle-optics
https://jmcardon.github.io/tsec/docs/http4s-auth.html

0_:::HASKELL:::
https://mmhaskell.com/liftoff
https://mmhaskell.com/real-world
https://wiki.haskell.org/Tutorials
https://www.cis.upenn.edu/~cis194/spring13/lectures/04-higher-order.html
http://learnyouahaskell.com/introduction
https://www.tutorialspoint.com/haskell/haskell_functor.htm
https://www.schoolofhaskell.com/school/starting-with-haskell/basics-of-haskell
https://bartoszmilewski.com/2016/11/21/monads-programmers-definition/
https://acm.wustl.edu/functional/haskell.php
https://cnds.jacobs-university.de/courses/ics-2019/hs-intro.pdf
http://learnyouahaskell.com/higher-order-functions

https://www.reddit.com/r/haskell/comments/aif4rn/ok_ill_bite_what_does_haskell_do_better_than_scala/
https://stackoverflow.com/questions/9952602/does-haskell-require-a-garbage-collector
https://stackoverflow.com/questions/36772017/reducing-garbage-collection-pause-time-in-a-haskell-program
https://stackoverflow.com/questions/9547741/garbage-collection-in-haskell-parallel-computations?rq=1
https://www.fpcomplete.com/blog/2016/11/comparison-scala-and-haskell/
https://www.reddit.com/r/haskell/comments/3bx93a/haskellghc_garbage_collection/
https://docs.haskellstack.org/en/stable/README/
https://tech.channable.com/posts/2020-04-07-lessons-in-managing-haskell-memory.html

https://joelburget.com/data-newtype-instance-class/
https://stackoverflow.com/questions/12529439/what-is-the-differences-between-class-and-instance-declarations
https://stackoverflow.com/questions/44886668/what-does-instance-mean-in-haskell
https://wiki.haskell.org/Newtype
https://wiki.haskell.org/OOP_vs_type_classes
https://en.wikibooks.org/wiki/Haskell/Classes_and_types
https://wiki.haskell.org/Smart_constructors
https://www.parsonsmatt.org/2017/02/17/ooph_data_inheritance.html
https://stackoverflow.com/questions/51509949/what-do-haskell-data-constructors-construct
https://stackoverflow.com/questions/10313349/haskell-way-to-go-about-enums
https://stackoverflow.com/questions/6000511/better-way-to-define-an-enum-in-haskell

https://github.com/krispo/awesome-haskell

0_:::MODERN_TOOLS:::
:Kafka,
http://cloudurable.com/blog/kafka-architecture-low-level/index.html
http://cloudurable.com/blog/what-is-kafka/index.html
http://cloudurable.com/blog/kafka-architecture/index.html
http://cloudurable.com/blog/kafka-architecture-topics/index.html
http://cloudurable.com/blog/kafka-architecture-consumers/index.html
http://cloudurable.com/blog/kafka-architecture-producers/index.html
http://cloudurable.com/blog/kafka-architecture-log-compaction/index.html
https://beagle1984.github.io/silverback/docs/kafka/message-key
https://stackoverflow.com/questions/29511521/is-key-required-as-part-of-sending-messages-to-kafka
https://linuxhint.com/apache_kafka_partitions/
https://www.confluent.io/stream-processing-cookbook/ksql-recipes/setting-kafka-message-key/
https://www.conduktor.io/kafka/what-is-apache-kafka/
https://forum.confluent.io/t/what-should-i-use-as-the-key-for-my-kafka-message/312/2
https://codingharbour.com/apache-kafka/the-introduction-to-kafka-topics-and-partitions/
https://developer.confluent.io/learn-kafka/architecture/get-started/
https://developer.confluent.io/learn-kafka/apache-kafka/events/
https://www.confluent.io/blog/apache-kafka-data-access-semantics-consumers-and-membership/
https://medium.com/event-driven-utopia/understanding-kafka-topic-partitions-ae40f80552e8
https://towardsdatascience.com/kafka-no-longer-requires-zookeeper-ebfbf3862104
https://www.confluent.io/blog/42-ways-zookeeper-removal-improves-kafka/
https://www.morling.dev/blog/exploring-zookeeper-less-kafka/
https://www.cloudkarafka.com/blog/cloudkarafka-what-is-zookeeper.html
https://www.confluent.io/blog/removing-zookeeper-dependency-in-kafka/
https://quix.io/blog/kafka-auto-offset-reset-use-cases-and-pitfalls
https://medium.com/@pravvich
Exactly Once,
https://www.confluent.io/blog/exactly-once-semantics-are-possible-heres-how-apache-kafka-does-it/
https://www.confluent.io/blog/enabling-exactly-once-kafka-streams/
https://www.linkedin.com/pulse/kafka-transactions-part-1-exactly-once-messaging-rob-golder
https://www.linkedin.com/pulse/kafka-idempotent-consumer-transactional-outbox-rob-golder/?trk=article-ssr-frontend-pulse_little-text-block
https://www.baeldung.com/kafka-exactly-once
https://medium.com/@aviksaha2007/exactly-once-processing-with-apache-kafka-4ae243ced107
https://oleg0potapov.medium.com/how-kafka-achieves-exactly-once-semantics-57fdb7ad2e3f
https://strimzi.io/blog/2023/05/03/kafka-transactions/
https://softwaremill.com/what-kafka-exactly-once-really-means/
https://engineering.hellofresh.com/demystifying-kafka-exactly-once-semantics-eos-390ae1c32bba
https://www.dbos.dev/blog/exactly-once-apache-kafka-processing
https://dzone.com/articles/exactly-once-semantics-with-apache-kafka-1
Compression,
https://medium.com/apache-kafka-from-zero-to-hero/apache-kafka-guide-31-producer-message-compression-f1f608c47ed7
https://cwiki.apache.org/confluence/display/kafka/compression
https://developer.ibm.com/articles/benefits-compression-kafka-messaging/
https://learn.conduktor.io/kafka/kafka-message-compression/
Deep Internals,
https://www.confluent.io/blog/preparing-the-consumer-fetch-kafka-producer-and-consumer-internals-part-3/
https://www.confluent.io/blog/kafka-producer-internals-handling-producer-request/
https://www.confluent.io/blog/kafka-producer-internals-preparing-event-data/
K-connect,
https://wiadrodanych.pl/big-data/apache-kafka/kafka-connect-w-pigulce/
https://www.baeldung.com/kafka-connectors-guide
https://www.tutorialworks.com/kafka-vs-streams-vs-connect/
Examples,
https://stackoverflow.com/questions/52957389/kafka-make-consumer-group-inactive
https://stackoverflow.com/questions/48866690/how-to-shift-back-the-offset-of-a-topic-within-a-stable-kafka-consumer-group

partitioning | leaders | rebalance | controller | replica | retention | compation | producer-modes | ack statuses | streams | kafka vs jms | commit log | message key | join group request | sync async commitoff | request-consumer-producer

Books: Kafka – definitive guide

:Akka,
akka Pros and cons,
https://softwareengineering.stackexchange.com/questions/300396/why-is-akka-good-for-concurrency
https://softwareengineering.stackexchange.com/questions/212754/when-is-it-not-good-to-use-actors-in-akka-erlang
https://stackoverflow.com/questions/4493001/what-are-the-best-use-cases-for-akka-framework
https://www.oreilly.com/library/view/scala-reactive-programming/9781787288645/af49b94a-7c9f-4316-9173-6807a95539b1.xhtml

https://blog.knoldus.com/introduction-to-akka/
https://blog.knoldus.com/understanding-akka-actor-lifecycle/
https://www.baeldung.com/akka-actors-java
https://www.baeldung.com/scala/typed-akka
https://blog.knoldus.com/what-is-ask-pattern-in-akka/
https://blog.knoldus.com/circuit-breaker-in-akka/
https://blog.knoldus.com/achieving-concurrency-with-akka-actors/
https://blog.knoldus.com/concurrency-using-scala-problems-vs-tools/
https://blog.knoldus.com/akka-streams-all-about-materialization/
https://blog.knoldus.com/akka-stream-map-and-mapasync/
https://blog.knoldus.com/scale-out-with-cluster-sharding/
https://blog.knoldus.com/introduction-actor-model-akka-nutshell-1/
https://blog.knoldus.com/supervision-and-monitoring-in-akka/
https://www.signifytechnology.com/blog/2018/04/introduction-to-akka-actors-in-java-by-baeldung
https://www.slideshare.net/krivachy/the-dark-side-of-akka-and-the-remedy
https://dzone.com/articles/3-reasons-why-akka-typed-helps-you-write-better-co
https://sap1ens.com/blog/2015/10/25/actors-streams-and-futures-in-akka/
https://eng.localytics.com/akka-streams-akka-without-the-actors/
https://manuel.bernhardt.io/2018/08/06/akka-anti-patterns-many-actors/
https://manuel.bernhardt.io/2019/07/11/tour-of-akka-typed-protocols-and-behaviors/
https://stackoverflow.com/questions/27484460/akka-what-is-the-reason-of-processing-messages-one-at-a-time-in-an-actor
https://stackoverflow.com/questions/13847963/akka-kill-vs-stop-vs-poison-pill
https://doc.akka.io/docs/akka/snapshot/index-classic.html
https://doc.akka.io/docs/akka/snapshot/typed/index.html
https://doc.akka.io/docs/akka/current/general/actors.html
https://www.freecodecamp.org/news/how-to-make-a-simple-application-with-akka-cluster-506e20a725cf/
https://sachabarbs.wordpress.com/2016/08/02/akka-mailboxes/

Books: Akka in Action

:ElasticSearch,
invertedindex | replica | primary shard | rodzaje wyszukiwania | mapping | analyzer | dynamic mapping | tokenizer | token filter | character filter | analyzer | type mapping | document(key, value) | lucene | bulk request | scan scroll | create update in depth

Books: ElatsticSearch definitive guide

:Spark
https://blog.knoldus.com/what-make-spark-so-powerful-part-1/
https://blog.knoldus.com/spark-structured-streaming-part-1-introduction/
https://blog.knoldus.com/spark-streaming-datasets/
https://blog.knoldus.com/stateful-streaming-in-spark/
https://blog.knoldus.com/broadcast-variables-in-spark-how-and-when-to-use-them/
https://www.tutorialspoint.com/apache_spark/advanced_spark_programming.htm
https://spark.apache.org/docs/latest/quick-start.html
https://www.tutorialkart.com/apache-spark/spark-parallelize-example/
https://sparkbyexamples.com/spark/spark-read-text-file-rdd-dataframe/
https://www.mikulskibartosz.name/shuffling-in-apache-spark/
https://www.databricks.com/blog/2016/07/14/a-tale-of-three-apache-spark-apis-rdds-dataframes-and-datasets.html
https://medium.com/virtuslab/spark-sql-under-the-hood-part-i-26077f85ebf0
https://www.databricks.com/glossary/tungsten
https://stackoverflow.com/questions/31508083/difference-between-dataframe-dataset-and-rdd-in-spark
https://data-flair.training/blogs/fault-tolerance-in-apache-spark/
https://spark.apache.org/docs/latest/rdd-programming-guide.html
https://data-flair.training/blogs/apache-spark-rdd-persistence-caching/
https://www.javatpoint.com/apache-spark-rdd-persistence
https://towardsdatascience.com/apache-spark-performance-boosting-e072a3ec1179
https://blog.knoldus.com/understanding-the-working-of-spark-driver-and-executor/
https://blog.knoldus.com/apache-spark-repartitioning-v-s-coalesce/
https://blog.knoldus.com/deep-dive-into-apache-spark-transformations-and-action/
https://blog.knoldus.com/spark-actions-and-transformations/
https://blog.knoldus.com/spark-introduction-to-datasets/
https://blog.knoldus.com/difference-between-rdd-df-and-ds-in-spark/
https://blog.knoldus.com/spark-why-should-we-use-sparksession/
https://blog.knoldus.com/apache-spark-cluster-internals-how-spark-jobs-will-be-computed-by-the-spark-cluster/
https://blog.knoldus.com/demystifying-asynchronous-actions-in-spark/
https://stackoverflow.com/questions/30691385/how-spark-works-internally
https://www.analyticsvidhya.com/blog/2021/08/understand-the-internal-working-of-apache-spark/
https://techvidvan.com/tutorials/spark-architecture/
https://blog.knoldus.com/introduction-to-accumulators-apache-spark/
https://blog.knoldus.com/shufflling-and-repartitioning-of-rdds-in-apache-spark/
https://blog.knoldus.com/how-spark-internally-executes-a-program/
https://www.javatpoint.com/apache-spark-rdd-shared-variables
https://blog.cloudera.com/how-to-tune-your-apache-spark-jobs-part-1/
https://blog.clairvoyantsoft.com/bucketing-in-spark-878d2e02140f
https://umbertogriffo.gitbook.io/apache-spark-best-practices-and-tuning/dataframe/joining-a-large-and-a-small-dataset
https://medium.com/datakaresolutions/optimize-spark-sql-joins-c81b4e3ed7da
https://medium.com/road-to-data-engineering/spark-performance-optimization-series-3-shuffle-104738a83a9e
https://medium.com/swlh/revealing-apache-spark-shuffling-magic-b2c304306142
https://medium.com/road-to-data-engineering/spark-performance-optimization-series-2-spill-685126e9d21f
https://towardsdatascience.com/best-practices-for-caching-in-spark-sql-b22fb0f02d34
https://medium.com/@adrianchang/apache-spark-checkpointing-ebd2ec065371
https://towardsdatascience.com/the-art-of-joining-in-spark-dcbd33d693c
https://docs.databricks.com/optimizations/aqe.html
https://dzone.com/articles/why-your-spark-apps-are-slow-or-failing-part-ii-da#:~:text=Salting%20is%20a%20technique%20where,to%20match%20the%20random%20keys.
https://towardsdatascience.com/should-i-repartition-836f7842298c
https://medium.com/softwaresanders/improving-your-apache-spark-application-performance-ec5d64bc3c75
https://medium.com/enigma-engineering/things-i-wish-id-known-about-spark-when-i-started-one-year-later-edition-d767430181ed
https://luminousmen.com/post/spark-tips-partition-tuning
https://robertovitillo.com/spark-best-practices/
https://ch-nabarun.medium.com/apache-spark-optimization-techniques-54864d4fdc0c
https://towardsdatascience.com/be-in-charge-of-query-execution-in-spark-sql-c83d1e16b9b8
https://towardsdatascience.com/about-joins-in-spark-3-0-1e0ea083ea86
https://medium.com/expedia-group-tech/part-3-efficient-executor-configuration-for-apache-spark-b4602929262
https://data-flair.training/blogs/rdd-lineage/
https://dzone.com/articles/common-reasons-your-spark-applications-are-slow-or
https://medium.com/towards-data-science/apache-spark-optimization-techniques-fa7f20a9a2cf
https://www.informit.com/articles/article.aspx?p=2928186
https://blog.knoldus.com/understanding-sparks-logical-and-physical-plan-in-laymans-term/
https://www.databricks.com/blog/2015/04/13/deep-dive-into-spark-sqls-catalyst-optimizer.html
https://databricks-prod-cloudfront.cloud.databricks.com/public/4027ec902e239c93eaaa8714f173bcfc/9000630084352253/509646307872265/6405721786982255/latest.html
https://stackoverflow.com/questions/55822462/scala-spark-collect-list-vs-array
https://sparkbyexamples.com/spark/spark-collect-list-and-collect-set-functions/
https://www.projectpro.io/article/how-data-partitioning-in-spark-helps-achieve-more-parallelism/297
https://www.databricks.com/blog/2015/04/28/project-tungsten-bringing-spark-closer-to-bare-metal.html
https://stackoverflow.com/questions/72353355/how-to-force-enable-broadcast-join-in-spark
https://rockthejvm.com/articles/broadcast-joins-in-apache-spark-an-optimization-technique
https://medium.com/@manojkumardhakad/apache-spark-broadcast-join-internals-and-types-b71cae327a59
https://www.linkedin.com/pulse/spark-join-strategies-mastering-joins-apache-venkatesh-nandikolla-mk4qc
https://www.linkedin.com/pulse/apache-spark-101-shuffle-join-vs-broadcast-joins-shanoj-kumar-v-g779c
https://medium.com/@ashwin_kumar_/spark-partitioning-vs-bucketing-partitionby-vs-bucketby-09c98c5b40eb
https://sachin-s1dn.medium.com/understanding-sparks-bucketby-clause-252d54b395d9
https://stackoverflow.com/questions/67599449/what-is-the-difference-between-bucketby-and-partitionby-in-spark
https://www.linkedin.com/pulse/partition-vs-bucket-which-one-should-you-choose-vishwajeet-dabholkar
https://www.getorchestra.io/guides/spark-concepts-pyspark-sql-dataframewriter-bucketby-examples
https://medium.com/@pallavisinha12/spark-bucketing-performance-optimization-technique-e7875b0af9dd
https://www.linkedin.com/pulse/spark-dynamic-partition-pruning-rahul-dawn-zgbnf
https://medium.com/geekculture/dynamic-partition-pruning-baf3270694b4
https://stackoverflow.com/questions/60613615/what-is-the-difference-between-sparks-partition-pruning-and-predicate-pushdown
https://dzone.com/articles/dynamic-partition-pruning-in-spark-30
https://www.unraveldata.com/resources/intricacies-in-spark-30-partition-pruning/
https://medium.com/@prabhakaran.electric/spark-3-0-feature-dynamic-partition-pruning-dpp-to-avoid-scanning-irrelevant-data-1a7bbd006a89
https://docs.databricks.com/en/optimizations/spark-ui-guide/long-spark-stage-page.html
https://www.databricks.com/discover/pages/optimize-data-workloads-guide#data-shuffling
https://stackoverflow.com/questions/77532248/spark-spill-disk-and-spill-memory-problem
https://stackoverflow.com/questions/41661849/spill-to-disk-and-shuffle-write-spark
https://selectfrom.dev/spark-performance-tuning-spill-7318363e18cb
https://www.linkedin.com/pulse/understanding-memory-spills-apachespark-shanoj-kumar-v-ifywc
https://gaurav98095.medium.com/delving-deep-into-data-spill-in-apache-spark-88c90c578f5a
https://blog.devgenius.io/spark-spill-7e027085ca4c
https://docs.databricks.com/en/optimizations/spark-ui-guide/slow-spark-stage-low-io.html
https://michaelheil.medium.com/understanding-common-performance-issues-in-apache-spark-deep-dive-data-spill-7cdba81e697e
https://xuechendi.github.io/2019/04/15/Spark-Shuffle-and-Spill-Explained
http://www.openkb.info/2021/02/spark-tuning-understanding-spill-from.html
https://medium.com/@diehardankush/how-to-understanding-data-skewness-in-apache-spark-9e93b9a68f46
https://medium.com/@suffyan.asad1/handling-data-skew-in-apache-spark-techniques-tips-and-tricks-to-improve-performance-e2934b00b021
https://www.linkedin.com/pulse/what-data-skew-spark-manoj-karan-singh
https://medium.com/@nikaljeajay36/understanding-salting-in-spark-a-practical-guide-bf30f4525f64
https://saturncloud.io/blog/spark-understanding-salting-and-its-role-in-handling-skewed-data/
https://www.linkedin.com/pulse/handling-data-skewness-spark-power-salting-pyspark-kommanaboina-vskic
Optimization Tuning,
https://www.linkedin.com/pulse/taming-slowdown-comprehensive-guide-optimizing-spark-queries-kedari-jocwe
https://towardsdatascience.com/6-recommendations-for-optimizing-a-spark-job-5899ec269b4b
https://www.decube.io/post/spark-jobs-data-engineers-guide
https://www.linkedin.com/pulse/how-optimize-apache-spark-performance-big-data-processing
https://medium.com/@ashwin_kumar_/spark-performance-tuning-best-practices-67d564aafa03
https://www.toptal.com/spark/apache-spark-optimization-techniques
https://www.syntelli.com/eight-performance-optimization-techniques-using-spark
https://www.databricks.com/glossary/spark-tuning
https://developer.ibm.com/blogs/spark-performance-optimization-guidelines/
https://www.startdataengineering.com/post/how-to-optimize-your-spark-jobs/
Arrayfunctions,
https://medium.com/expedia-group-tech/deep-dive-into-apache-spark-array-functions-720b8fbfa729
https://www.linkedin.com/pulse/how-interact-select-while-exploding-arrays-spark-afonso-orgino-lenzi
Sqlwindow,
https://medium.com/@erkansirin/spark-sql-window-functions-303702c194a8
https://jaceklaskowski.gitbooks.io/mastering-spark-sql/content/spark-sql-functions-windows.html
https://stackoverflow.com/questions/71846135/convert-spark-sql-to-scala-using-window-function-partitioned-by-aggregate
https://kaizen.itversity.com/courses/hdpcsd-hdp-certified-spark-developer-hdpcsd-python/lessons/hdpcsd-apache-spark-2-data-frames-and-spark-sql-python/topic/hdpcsd-spark-sql-analytics-functions-or-windowing-functions-python/
https://medium.com/@suffyan.asad1/an-introduction-to-window-functions-in-apache-spark-with-examples-66cb06b06e1f
Udf,
https://stackoverflow.com/questions/73650819/how-to-apply-udf-on-a-dataframe-and-on-a-column-in-scala
https://docs.databricks.com/en/udf/index.html
https://medium.com/@suffyan.asad1/a-deeper-look-into-spark-user-defined-functions-537c6efc5fb3
https://sparkbyexamples.com/pyspark/pyspark-udf-user-defined-function/
Streaming,
https://stackoverflow.com/questions/75066048/how-sliding-window-functions-work-in-spark
https://blog.demir.io/analyzing-real-time-data-streams-with-window-functions-in-apache-spark-cbde44b065ea
https://medium.com/swlh/demystifying-sparks-stream-stream-outer-join-8fcbcd4a9e59
https://www.databricks.com/blog/feature-deep-dive-watermarking-apache-spark-structured-streaming
https://stackoverflow.com/questions/77000635/spark-streaming-withwatermark-with-duplicate-behaviour
https://docs.databricks.com/en/structured-streaming/watermarks.html
Advanced,
https://mallikarjuna_g.gitbooks.io/spark/content/
https://community.cloud.databricks.com/login.html
Rozne,
https://sparkconfigoptimizer.com/
Examples,
https://www.statology.org/pyspark-guides/
https://github.com/spark-examples
https://spark.apache.org/docs/latest/api/sql/index.html
https://sparkbyexamples.com/spark/spark-groupbykey/
https://sparkbyexamples.com/spark/spark-shuffle-partitions/
https://sparkbyexamples.com/spark/spark-sql-dataframe-join/
https://sparkbyexamples.com/spark/spark-map-vs-mappartitions-transformation/
https://sparkbyexamples.com/spark/how-to-pivot-table-and-unpivot-a-spark-dataframe/
https://sparkbyexamples.com/spark/spark-dataframe-collect/
https://sparkbyexamples.com/spark/spark-dataframe-cache-and-persist-explained/
https://sparkbyexamples.com/spark/spark-sql-udf/
https://sparkbyexamples.com/spark/spark-streaming-outputmode/
https://sparkbyexamples.com/pyspark/pyspark-lit-add-literal-constant/
https://sparkbyexamples.com/spark/explode-spark-array-and-map-dataframe-column/
https://sparkbyexamples.com/spark/spark-sql-performance-tuning-configurations/
https://sparkbyexamples.com/spark/spark-partitioning-understanding/
https://sparkbyexamples.com/spark/spark-performance-tuning/
https://www.linkedin.com/pulse/exploring-string-functions-spark-sql-guide-examples-dabholkar/?trackingId=Les2HjtoSJeP017iTrAUAg%3D%3D
https://medium.com/@rahulgosavi.94/harnessing-the-power-of-collect-list-and-collect-set-in-pyspark-and-pysql-d6926f5383cf

Books: Spark The Definitive Guide

:Fs2
https://underscore.io/blog/posts/2018/03/20/fs2.html
https://www.beyondthelines.net/programming/streaming-patterns-with-fs2/
https://www.freecodecamp.org/news/a-streaming-library-with-a-superpower-fs2-and-functional-programming-6f602079f70a/
https://devon-miller.gitbook.io/test_private_book/sstream_model
https://stackoverflow.com/questions/63402330/why-does-merging-with-empty-fs2-stream-change-programs-behavior
https://www.reddit.com/r/scala/comments/td4dvd/fs2_stream_doesnt_work_as_i_expect_it_to/?rdt=51625
https://speakerdeck.com/mpilquist/compositional-streaming-with-fs2
https://impurepics.com/posts/2018-09-30-fs2-concurrency.html
https://blog.rockthejvm.com/fs2/

:Hadoop
https://www.simplilearn.com/tutorials/hadoop-tutorial/hadoop-architecture
https://www.simplilearn.com/tutorials/hadoop-tutorial/what-is-hadoop
https://www.projectpro.io/article/hadoop-architecture-explained-what-it-is-and-why-it-matters/317
https://www.simplilearn.com/tutorials/hadoop-tutorial/hadoop-ecosystem
https://www.databricks.com/glossary/hadoop-ecosystem
https://www.simplilearn.com/tutorials/hadoop-tutorial/mapreduce
https://medium.com/edureka/mapreduce-tutorial-3d9535ddbe7c
https://www.projectpro.io/article/what-is-hadoop-2-0-high-availability/87
https://www.simplilearn.com/tutorials/hadoop-tutorial/yarn
https://www.projectpro.io/article/hadoop-2-0-yarn-framework-the-gateway-to-easier-programming-for-hadoop-users/84
https://www.simplilearn.com/tutorials/hadoop-tutorial/hdfs
https://hadoop.apache.org/docs/r1.2.1/hdfs_design.html
https://www.geeksforgeeks.org/difference-between-hdfs-and-nfs/
https://stackoverflow.com/questions/30299129/when-to-prefer-hadoop-mapreduce-over-spark
https://www.openlogic.com/blog/spark-vs-hadoop
https://www.geeksforgeeks.org/difference-between-hadoop-and-spark/
https://geekflare.com/hadoop-vs-spark/
https://www.simplilearn.com/spark-vs-hadoop-article
https://www.ibm.com/blog/hadoop-vs-spark/
https://www.integrate.io/blog/apache-spark-vs-hadoop-mapreduce/
https://www.projectpro.io/article/hadoop-mapreduce-vs-apache-spark-who-wins-the-battle/83
https://aws.amazon.com/compare/the-difference-between-hadoop-vs-spark/
https://www.geeksforgeeks.org/difference-between-hadoop-2-x-vs-hadoop-3-x/
https://www.projectpro.io/article/top-50-hadoop-interview-questions-for-2018/92
https://stackoverflow.com/questions/26954162/what-is-keyword-context-in-hadoop-programming-world
https://www.quora.com/What-is-the-use-of-Context-object-in-Hadoop
https://stackoverflow.com/questions/49140121/hadoop-mapreduce-context-write-changes-values
Examples,
https://github.com/Coursal/Hadoop-Examples/tree/main
https://www.simplilearn.com/tutorials/hadoop-tutorial/mapreduce-example
https://www.guru99.com/create-your-first-hadoop-program.html
https://www.sunlab.org/teaching/cse8803/spring2016/lab/mapreduce-basic/
https://dbdmg.polito.it/dbdmg_web/wp-content/uploads/2024/02/04_HadoopImplementationOfMapReduceNB.pdf
https://www.khoury.northeastern.edu/home/mirek/code/WordCount.java

:Deltalake datalake
https://docs.databricks.com/en/delta/index.html
https://learn.microsoft.com/en-gb/azure/synapse-analytics/spark/apache-spark-what-is-delta-lake
https://www.hpe.com/us/en/what-is/delta-lake.html
https://delta.io/blog/delta-lake-vs-data-lake/
https://www.sprinkledata.com/blogs/delta-lake-vs-data-lake-unraveling-the-differences-and-benefits
https://techcommunity.microsoft.com/t5/azure-synapse-analytics-blog/synapse-data-lake-vs-delta-lake-vs-data-lakehouse/ba-p/3673653
https://kanini.com/blog/data-lake-vs-delta-lake/
https://medium.com/@harun.raseed093/data-lake-vs-delta-lake-105f126e6b3f
https://www.montecarlodata.com/blog-data-warehouse-vs-data-lake-vs-data-lakehouse-definitions-similarities-and-differences/
https://www.montecarlodata.com/blog-data-lake-vs-data-warehouse/
https://www.databricks.com/discover/data-lakes
https://www.coursera.org/articles/data-lake-vs-data-warehouse?utm_medium=sem&utm_source=gg&utm_campaign=B2C_EMEA__coursera_FTCOF_career-academy_pmax-multiple-audiences-country-multi&campaignid=20858198824&adgroupid=&device=c&keyword=&matchtype=&network=x&devicemodel=&adposition=&creativeid=&hide_mobile_promo&gad_source=1&gclid=EAIaIQobChMIyN2jw_SWhgMV4wqiAx1ivgk_EAAYAiAAEgIIJvD_BwE
https://community.databricks.com/t5/machine-learning/delta-lake-vs-data-lake-in-databricks-delta-lake-is-an-open/td-p/14807

:Hive
https://www.simplilearn.com/what-is-hive-article
https://www.slideshare.net/Hadoop_Summit/w-235phall1pandey
https://www.openlogic.com/blog/what-is-apache-hbase
https://www.databricks.com/glossary/apache-hive
https://www.linkedin.com/pulse/hadoop-vs-hive-darshika-srivastava-bwe9c
https://www.geeksforgeeks.org/difference-between-hadoop-and-hive/
https://medium.com/plumbersofdatascience/hive-architecture-in-depth-ba44e8946cbc
https://cwiki.apache.org/confluence/display/Hive/Cost-based+optimization+in+Hive
https://docs.pingcap.com/tidb/stable/partition-pruning
https://drill.apache.org/docs/partition-pruning-introduction/

:Hbase
https://www.projectpro.io/article/hive-vs-hbase-different-technologies-that-work-better-together/322
https://www.ibm.com/topics/hbase
https://www.ibm.com/docs/en/db2-big-sql/7.0?topic=performance-hbase-basics

:Elastic Logstash Kibana
https://blog.knoldus.com/what-is-the-elk-stack/

:Distributed Systems
https://en.wikipedia.org/wiki/Distributed_algorithm

:Systems in general
https://www.solarwinds.com/resources/it-glossary/network-bandwidth
https://www.techtarget.com/searchnetworking/definition/bandwidth
https://en.wikipedia.org/wiki/Bandwidth_(computing)
https://www.ninjaone.com/it-hub/endpoint-management/what-is-network-bandwidth/
https://www.geeksforgeeks.org/introduction-to-bandwidth/
https://en.wikipedia.org/wiki/Input/output
https://en.wikipedia.org/wiki/I/O_bound
https://mechanical-sympathy.blogspot.com/2011/12/java-sequential-io-performance.html
https://rick-hightower.blogspot.com/2013/11/fastet-java-io-circa-2013-writing-large.html
https://stackoverflow.com/questions/868568/what-do-the-terms-cpu-bound-and-i-o-bound-mean
https://medium.com/@buketsenturk/i-o-bound-vs-cpu-bound-vs-memory-bound-tasks-f32da34ae043
https://medium.com/nerd-for-tech/what-is-asynchronous-i-o-b37994359471
https://www.geeksforgeeks.org/difference-between-asynchronous-and-non-blocking/
https://www.ibm.com/think/topics/central-processing-unit
https://www.geeksforgeeks.org/central-processing-unit-cpu/
https://aws.amazon.com/what-is/cpu/
https://www.geeksforgeeks.org/difference-between-von-neumann-and-harvard-architecture/
https://medium.com/@icodewithben/harvard-vs-von-neumann-architecture-04c8c5de28ae
https://www.spiceworks.com/tech/tech-general/articles/von-neumann-architecture-vs-harvard-architecture/
https://adacomputerscience.org/concepts/arch_architecture
https://www.tme.eu/en/news/library-articles/page/56104/the-von-neumann-architecture-and-the-harvard-architecture/
https://en.wikipedia.org/wiki/Computer_data_storage

Rozne,
https://blog.knoldus.com/akka-streams-streaming-done-right/
https://dzone.com/articles/comparing-akka-streams-kafka-streams-and-spark-str

0_:::NO_SQL:::
Nosql ogolnie,
https://www.datastax.com/what-is/nosql
https://www.datastax.com/blog/relational-vs-nosql-when-should-I-use-one-over-the-other
https://www.linkedin.com/advice/1/how-can-you-partition-data-document-based-nosql-nb1xc
https://medium.com/@sudhakan/partitioning-in-nosql-databases-4adeb61a44a0
https://www.dremio.com/wiki/network-partition/
https://www.baeldung.com/mongodb-vs-couchbase
https://www.scaler.com/topics/couchbase-vs-mongodb/
https://www.todaysoftmag.com/article/1506/introduction-to-couchbase-nosql-document-database
https://db-engines.com/en/system/Couchbase%3BScyllaDB
https://hackolade.com/help/Query-drivendatamodelingbasedona.html
https://hackolade.com/help/MongoDB.html
https://hackolade.com/help/Couchbase.html
https://hackolade.com/help/Cassandra.html
https://hackolade.com/help/ScyllaDB.html
https://hevodata.com/learn/nosql-data-replication/
https://www.toptal.com/database/the-definitive-guide-to-nosql-databases
https://www.quora.com/How-do-I-check-for-duplicate-data-in-NoSQL-db
https://www.quora.com/Data-replication-from-RDBMS-to-NOSQL-has-been-challenging-In-what-ways-can-we-replicate-data-from-any-RDBMS-to-NOSQL
https://hackernoon.com/why-adopting-nosql-is-difficult-for-beginners-511659fb79d9
https://highlyscalable.wordpress.com/2012/03/01/nosql-data-modeling-techniques/
https://www.techighness.com/post/no-sql-data-modeling-1-to-1-1-to-many-many-to-many/
https://www.techighness.com/post/nosql-many-to-many-bound-unbound-associative-examples/
https://www.mongodb.com/blog/post/6-rules-of-thumb-for-mongodb-schema-design
https://www.geeksforgeeks.org/secondary-indexing-in-databases/
CAP Theorem BASE,
https://www.ibm.com/topics/cap-theorem
https://dgraph.io/blog/post/cap-theorem-partition-tolerance/
https://www.scylladb.com/glossary/cap-theorem/
https://medium.com/@ngneha090/understanding-the-cap-theorem-balancing-consistency-availability-and-partition-cb11c2b97e2b
https://www.bmc.com/blogs/cap-theorem/
https://en.wikipedia.org/wiki/Eventual_consistency
https://medium.com/@pravvich/cap-pacelc-theorems-718f663d2b08
Embedding vs linking relationships,
https://info.couchbase.com/rs/302-GJY-034/images/Relational_NoSQL_GetStarted.pdf
https://medium.com/geekculture/mongodb-relationships-embedding-vs-linking-pro-and-cons-5f7583e655ab
https://rspacesamuel.medium.com/nosql-modeling-considerations-b47f4e723e70
https://stackoverflow.com/questions/26891484/mongodb-children-and-parent-structure
https://stackoverflow.com/questions/21095809/links-vs-references-in-document-databases
https://www.couchbase.com/blog/data-migration-from-oracle-to-couchbase/
https://stackoverflow.com/questions/56400575/how-to-retrieve-the-child-of-the-parent-in-n1ql-query
https://www.couchbase.com/blog/data-modelling-when-embed-or-refer/
https://www.couchbase.com/blog/three-things-know-about-document-database-modelling-part-1/
https://www.couchbase.com/blog/json-data-modeling-rdbms-users/
https://www.couchbase.com/blog/a-json-data-modeling-guide/
https://www.couchbase.com/blog/user-profile-store-advanced-data-modeling/
https://www.openmymind.net/Multiple-Collections-Versus-Embedded-Documents/#1
https://stackoverflow.com/questions/5373198/mongodb-relationships-embed-or-reference
https://www.youtube.com/watch?v=FZ1nH7MDEvA
https://www.youtube.com/watch?v=Hdi1awDJi3Q
https://www.youtube.com/watch?v=ZDTGukrEj4k
https://www.youtube.com/watch?v=zoZW0tM6hwU
NoSQL pros and cons,
https://www.mongodb.com/scale/nosql-databases-pros-and-cons
https://stackoverflow.com/questions/5244437/pros-and-cons-of-mongodb
https://www.freecodecamp.org/news/nosql-databases-5f6639ed9574/
https://stackoverflow.com/questions/3342497/explanation-of-base-terminology
NoSQL vs SQL,
https://www.guru99.com/sql-vs-nosql.html
https://www.bmc.com/blogs/sql-vs-nosql/
Nosql duplicates changes,
https://stackoverflow.com/questions/29329409/best-practices-to-update-asynchronously-duplicated-data-in-mongodb
https://stackoverflow.com/questions/9537034/how-to-handle-changes-in-duplicated-data-in-nosql
https://stackoverflow.com/questions/4010032/too-much-data-duplication-in-mongodb
:Cassandra
Cassandra ogolnie,
https://medium.com/@nikhiljain1203/why-cassandra-is-so-fast-5f069e33e362
https://cdn.sanity.io/files/bbnkhnhl/production/ac9c39a40cbdbe961577f9c4a94679ef234a5b1d.pdf
https://www.guru99.com/cassandra-architecture.html
https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/architecture/archIntro.html
https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlHowDataWritten.html
https://www.guru99.com/cassandra-tutorial.html
https://stackoverflow.com/questions/60464009/how-cassandra-stores-the-column-data-on-disk
https://dba.stackexchange.com/questions/322953/how-is-cassandra-data-stored-physically-on-disk
https://data-flair.training/blogs/cassandra-architecture/
https://www.simplilearn.com/tutorials/big-data-tutorial/cassandra-data-model
https://thelastpickle.com/blog/2020/11/25/impacts-of-many-tables-on-cassandra.html
https://www.datastax.com/what-is/cassandra
https://viblo.asia/p/basic-data-modeling-with-cassandra-XQZGxogbvwA
https://www.slideshare.net/edanuff/indexing-in-cassandra
https://www.slideshare.net/carlyeks/cassandra-materialized-views
https://dba.stackexchange.com/questions/320094/how-do-i-keep-data-in-denormalized-cassandra-tables-in-sync
https://www.freecodecamp.org/news/the-apache-cassandra-beginner-tutorial/
https://stackoverflow.com/questions/27281536/cassandra-denormalization-datamodel/27282905#27282905
https://www.datastax.com/blog/introduction-to-apache-cassandra-the-lamborghini-of-the-nosql-world
https://www.slideshare.net/nkorla1share/cass-summit-3
https://cassandra.apache.org/_/cassandra-basics.html
https://www.ksolves.com/blog/big-data/apache-cassandra/uncover-the-inner-workings-of-apache-cassandra-an-architectural-exploration
https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlHowDataWritten.html
https://www.scylladb.com/glossary/cassandra-memtable/
https://cassandra.apache.org/_/blog/Apache-Cassandra-5.0-Features-Trie-Memtables-and-Trie-Indexed-SSTables.html
Indexes,
https://docs.datastax.com/en/dse/6.7/cql/cql/cql_using/useSecondaryIndex.html
https://docs.datastax.com/en/dse/6.7/cql/cql/cql_using/useWhenIndex.html
https://docs.datastax.com/en/dse/6.7/cql/cql/cql_using/useMultIndexes.html
https://stackoverflow.com/questions/48734670/sasi-index-in-cassandra-and-how-it-differs-from-normal-indexing
https://www.datastax.com/dev/cassandra-indexing
https://pantheon.io/blog/cassandra-scale-problem-secondary-indexes
https://batey.info/cassandra-sasi.html
https://stackoverflow.com/questions/58685581/cassandra-secondary-index-vs-another-table
https://stackoverflow.com/questions/61944845/why-secondary-indexes-are-less-efficient-in-cassandra
https://www.baeldung.com/cassandra-secondary-indexes
https://www.geeksforgeeks.org/secondary-indexes-on-map-collection-in-cassandra/
https://anant.us/blog/events/apache-cassandra-lunch-57-using-secondary-indexes-in-cassandra/
https://blog.knoldus.com/indexes-in-cassandra/
Materialized views,
https://docs.datastax.com/en/cql-oss/3.x/cql/cql_using/useCreateMV.html
https://docs.datastax.com/en/cql-oss/3.3/cql/cql_using/useOverviewMV.html
https://www.geeksforgeeks.org/materialized-views-in-cassandra/
https://opencredo.com/blogs/everything-need-know-cassandra-materialized-views/
https://blog.softwaremill.com/what-is-wrong-with-apache-cassandra-materialized-views-a7a25431dad
https://docs.datastax.com/en/cql-oss/3.3/cql/cql_using/useCreateMV.html
https://docs.datastax.com/en/cql-oss/3.3/cql/cql_using/knownLimitationsMV.html
https://docs.datastax.com/en/cql-oss/3.3/cql/cql_using/understandMV.html
Timeuuid,
https://docs.datastax.com/en/cql-oss/3.3/cql/cql_reference/uuid_type_r.html
https://stackoverflow.com/questions/17945677/cassandra-uuid-vs-timeuuid-benefits-and-disadvantages
https://stackoverflow.com/questions/16084573/cassandra-generate-a-unique-id
https://stackoverflow.com/questions/3935915/how-to-create-auto-increment-ids-in-cassandra
https://stackoverflow.com/questions/16084573/cassandra-generate-a-unique-id/16085168#16085168
https://stackoverflow.com/questions/49741745/how-to-select-data-in-cassandra-either-by-id-or-date
https://stackoverflow.com/questions/23660397/cassandra-batch-operations-unique-id
https://github.com/apache/cassandra/blob/cassandra-2.1/src/java/org/apache/cassandra/utils/UUIDGen.java
https://stackoverflow.com/questions/24952066/how-to-generate-timeuuid-in-java-scala
Batch and LWT,
https://docs.datastax.com/en/archived/cql/3.3/cql/cql_reference/cqlBatch.html
https://docs.datastax.com/en/archived/cql/3.3/cql/cql_using/useBatchGoodExample.html
https://docs.datastax.com/en/archived/cql/3.3/cql/cql_using/useBatchBadExample.html
https://docs.datastax.com/en/cql/dse/docs/reference/cql-commands/batch.html
https://stackoverflow.com/questions/42929928/cassandra-batch-query-performance-on-tables-having-different-partition-keys
https://docs.datastax.com/en/archived/cql/3.1/cql/cql_using/useBatch.html
https://foundev.medium.com/cassandra-batch-loading-without-the-batch-keyword-40f00e35e23e#.npmx2cnsq
https://www.baeldung.com/java-cql-cassandra-batch
https://stackoverflow.com/questions/40996347/cassandra-batch-with-conditions-cannot-span-multiple-tables
https://stackoverflow.com/questions/70940525/cassandra-insert-update-if-not-exists-or-field-value
https://stackoverflow.com/questions/42929928/cassandra-batch-query-performance-on-tables-having-different-partition-keys/42946757#42946757
https://stackoverflow.com/questions/42930498/cassandra-batch-query-vs-single-insert-performance/42947125#42947125
https://stackoverflow.com/questions/39121092/how-single-partition-batch-in-cassandra-function-for-multiple-column-update
https://stackoverflow.com/questions/49356986/cassandra-batch-statement-multiple-tables
https://stackoverflow.com/questions/29909050/cassandra-batches-with-if-not-exists-condition
https://stackoverflow.com/questions/27549437/cassandra-throws-bad-request-batch-with-conditions-cannot-span-multiple-tables
https://stackoverflow.com/questions/34043564/batch-update-cassandra-with-lightweight-transaction
https://docs.datastax.com/en/archived/cassandra/3.0/cassandra/dml/dmlLtwtTransactions.html
https://www.datastax.com/blog/lightweight-transactions-cassandra-20
Locking,
https://stackoverflow.com/questions/45126146/cassandra-as-distributed-lock
https://stackoverflow.com/questions/43975775/cassandra-write-lock
https://stackoverflow.com/questions/35026198/row-level-locking-in-cassandra
https://stackoverflow.com/questions/18446555/cassandra-row-level-locking-support-with-datastax-driver
Rozne,
https://stackoverflow.com/questions/75014514/cassandra-execution-order-of-insert-statements-in-a-batch-request
https://docs.datastax.com/en/dev-app-drivers/docs/developing/synchronous-asynchronous.html
https://stackoverflow.com/questions/43559589/why-is-my-cassandra-prepared-statement-ingest-of-data-so-slow/43559741#43559741
https://stackoverflow.com/questions/30158246/how-to-run-asynchronous-queries-with-spring
https://stackoverflow.com/questions/31571069/what-is-meaning-of-first-byte-of-the-hash-modulo-four
https://stackoverflow.com/questions/17711240/cql-3-cassandra-1-2-counter-how-to-insert-primary-key
https://blog.knoldus.com/cassandra-counter-column-and-table/
https://stackoverflow.com/questions/16532227/difference-between-update-and-insert-in-cassandra
https://stackoverflow.com/questions/41901797/insert-dummy-data-to-cassandra-counter-table
https://stackoverflow.com/questions/43961209/cassandra-make-counter-update-and-normal-update-atomic
https://stackoverflow.com/questions/19623432/how-to-get-current-timestamp-with-cql-while-using-command-line
https://stackoverflow.com/questions/26999098/is-the-in-relation-in-cassandra-bad-for-queries
https://stackoverflow.com/questions/18498445/how-to-perform-not-in-filter-in-cql3-query-select
https://stackoverflow.com/questions/30388311/cassandra-selecting-a-range-of-timeuuids-using-the-datastax-java-driver
https://stackoverflow.com/questions/19104629/selecting-timeuuid-columns-corresponding-to-a-specific-date
https://docs.datastax.com/en/cql-oss/3.3/cql/cql_using/useToken.html
https://stackoverflow.com/questions/41808393/cassandra-select-query-with-token-function
https://stackoverflow.com/questions/39839133/understanding-the-token-function-in-cassandra
https://www.bmc.com/blogs/cassandra-tokens/
https://stackoverflow.com/questions/23625481/paging-resultsets-in-cassandra-with-compound-primary-keys-missing-out-on-rows
https://stackoverflow.com/questions/52946935/caasandra-primary-key-column-user-cannot-be-restricted-as-preceding-column-ev
https://stackoverflow.com/questions/28565470/cassandra-primary-key-column-cannot-be-restricted
https://www.datastax.com/blog/improvements-driver-side-cassandra-20
https://www.baeldung.com/cassandra-keys
https://opensource.com/article/20/5/apache-cassandra
https://user.cassandra.apache.narkive.com/dQaOLy2L/best-practices-for-time-series-data-with-massive-amounts-of-records
https://stackoverflow.com/questions/33555228/batch-with-conditions-cannot-span-multiple-partitions
https://stackoverflow.com/questions/34422515/cassandra-error-clustering-column-cannot-be-restricted-preceding-column-is-re
https://stackoverflow.com/questions/43770816/cassandra-error-clustering-column-domain-cannot-be-restricted-preceding-colu
https://stackoverflow.com/questions/49285276/clustering-column-status-cannot-be-restricted-preceding-column-datetime-is
https://stackoverflow.com/questions/30418185/order-by-any-field-in-cassandra
https://planetcassandra.org/post/acid-transactions-change-the-game-for-cassandra-developers/
https://www.linkedin.com/advice/1/how-do-you-handle-conflicts-reconciliations-cassandras
https://www.linkedin.com/advice/0/how-can-you-ensure-data-consistency-apache-cassandra-9xn7c
https://blog.softwaremill.com/7-mistakes-when-using-apache-cassandra-51d2cf6df519
https://docs-previous.pega.com/decision-management/87/repairing-and-cleaning-cassandra-nodes-data-consistency
https://docs.datastax.com/en/cassandra-oss/3.x/cassandra/dml/dmlClientRequestsRead.html
https://docs.datastax.com/en/cassandra-oss/3.x/cassandra/dml/dmlClientRequestsWrite.html
https://stackoverflow.com/questions/73093622/how-does-cassandra-handle-inconsistencies-between-two-replicas
:Couchbase
https://docs.informatica.com/integration-cloud/data-integration-connectors/current-version/couchbase-connector/mappings-and-mapping-tasks-with-couchbase/partitioning.html
https://docs.informatica.com/integration-cloud/data-integration-connectors/current-version/couchbase-connector/mappings-and-mapping-tasks-with-couchbase/partitioning/passthrough-partitioning.html
https://docs.informatica.com/integration-cloud/data-integration-connectors/current-version/couchbase-connector/mappings-and-mapping-tasks-with-couchbase/partitioning/key-range-partitioning.html
https://docs.huihoo.com/couchbase/developer-guide/dev-guide-3.0/partition-data.html
https://docs.huihoo.com/couchbase/developer-guide/dev-guide-3.0/keys-values.html
https://docs.huihoo.com/couchbase/developer-guide/dev-guide-3.0/buckets.html
https://docs.huihoo.com/couchbase/developer-guide/dev-guide-3.0/sharding.html
https://www.couchbase.com/blog/how-to-use-global-secondary-index-partitioning-for-more-than-partitions/
https://docs.couchbase.com/cloud/n1ql/n1ql-language-reference/index-partitioning.html
https://docs.huihoo.com/couchbase/developer-guide/dev-guide-3.0/views.html
https://docs.huihoo.com/couchbase/developer-guide/dev-guide-3.0/sync-async-transactions.html
https://docs.huihoo.com/couchbase/developer-guide/dev-guide-3.0/transactional-logic.html
https://docs.huihoo.com/couchbase/developer-guide/dev-guide-3.0/app-performance.html
https://docs.huihoo.com/couchbase/developer-guide/dev-guide-3.0/replica-read-functions.html
https://docs.couchbase.com/cloud/clusters/data-service/about-buckets-scopes-collections.html
https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html
https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/storage-engines.html
https://docs.couchbase.com/server/current/learn/data/document-data-model.html
https://docs.couchbase.com/server/current/learn/data/scopes-and-collections.html
https://docs.couchbase.com/server/current/learn/services-and-indexes/indexes/indexes.html
https://docs.couchbase.com/server/current/learn/data/durability.html
https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/storage-settings.html#threading
https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/memory.html
https://docs.couchbase.com/server/current/learn/clusters-and-availability/rebalance.html
https://www.couchbase.com/blog/transactional-databases/
https://docs.couchbase.com/java-sdk/current/howtos/concurrent-document-mutations.html
https://www.couchbase.com/blog/distributed-multi-document-acid-transactions/
https://docs.couchbase.com/server/current/learn/architecture-overview.html
https://docs.couchbase.com/server/current/learn/services-and-indexes/services/services.html
https://docs.couchbase.com/server/current/learn/architecture-diagrams.html
https://info.couchbase.com/rs/302-GJY-034/images/Capella_Architecture_Overview.pdf
https://intranet.icar.cnr.it/wp-content/uploads/2018/06/RT-ICAR-PA-2018-02.pdf
https://dzone.com/articles/couchbase-architecture-deep
:MongoDb
https://www.geeksforgeeks.org/mongodb-architecture/
https://intellipaat.com/blog/what-is-mongodb/
https://medium.com/techieahead/mongodb-architecture-and-characteristics-32a3798c2b49
https://s3.amazonaws.com/info-mongodb-com/MongoDB_Architecture_Guide.pdf
https://towardsdatascience.com/databases-an-overview-97c54628b824
https://www.guru99.com/what-is-mongodb.html
https://docs.mongodb.com/manual/applications/data-models-relationships/
https://stackoverflow.com/questions/5373198/mongodb-relationships-embed-or-reference
https://docs.mongodb.com/manual/reference/method/db.collection.aggregate/
https://docs.mongodb.com/manual/aggregation/
https://www.compose.com/articles/aggregations-in-mongodb-by-example/
Sharding,
https://www.mongodb.com/docs/manual/core/hashed-sharding/
https://www.mongodb.com/docs/v3.4/core/ranged-sharding/
https://www.mongodb.com/docs/manual/tutorial/manage-shard-zone/
https://groups.google.com/g/mongodb-user/c/D7ywikq8q4U
https://www.mongodb.com/blog/post/sharding-pitfalls-part-i
https://www.slideshare.net/MyDBOPS/evolution-of-monogdb-sharding-and-its-best-practices-ranjith-a-mydbops-team
https://learnmongodbthehardway.com/schema/sharding/
https://www.slideshare.net/mongodb/1-introduction20to20-sharding-shaun-verch
https://www.slideshare.net/rick446/scaling-withmongodb
https://www.slideshare.net/MyDBOPS/scaling-mongodb-with-horizontal-and-vertical-sharding


0_:::SIECI:::
Protokoly: TCP/IP HTTP, Telnet, FTP, TFTP, SNMP, DNS, SMTP
HTTP,
https://www.tutorialspoint.com/http/http_overview.htm
https://www.javatpoint.com/computer-network-http
https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview
https://www.khanacademy.org/computing/computers-and-internet/xcae6f4a7ff015e7d:the-internet/xcae6f4a7ff015e7d:web-protocols/a/hypertext-transfer-protocol-http
HTTPS,
https://blog.bytebytego.com/p/how-does-https-work-episode-6
TCP IP UDP,
https://www.javatpoint.com/tcp-vs-udp
DNS,
https://ns1.com/resources/dns-protocol
https://www.cloudflare.com/learning/dns/what-is-dns/
https://www.javatpoint.com/computer-network-dns
GRPC,
https://konghq.com/learning-center/api-management/what-is-grpc
https://medium.com/@sankar.p/how-grpc-convinced-me-to-chose-it-over-rest-30408bf42794
https://blog.dreamfactory.com/grpc-vs-rest-how-does-grpc-compare-with-traditional-rest-apis/
https://www.altexsoft.com/blog/what-is-grpc/
https://nordicapis.com/rest-vs-grpc-advantages-and-disadvantages/
https://protobuf.dev/overview/
https://aws.amazon.com/compare/the-difference-between-grpc-and-rest/
https://stackoverflow.blog/2022/11/28/when-to-use-grpc-vs-graphql/
https://www.cncf.io/blog/2021/08/04/grpc-in-action-example-using-java-microservices/
https://luizcostatech.medium.com/the-guide-to-rump-up-on-grpc-in-java-163d4b82f153
https://pamodaaw.medium.com/handson-introduction-to-grpc-with-java-1195870027fb
https://github.com/pamodaaw/grpc-sample
https://github.com/pamodaaw/grpc-sample/blob/main/src/main/resources/demo.gif
https://www.baeldung.com/grpc-introduction
https://grpc.io/docs/languages/java/generated-code/
Thrift,
https://github.com/apache/thrift
https://www.baeldung.com/apache-thrift
https://stackshare.io/stackups/apache-thrift-vs-grpc
https://medium.com/@justinzhou.web3/thrift-vs-grpc-a-comprehensive-comparison-of-two-popular-rpc-frameworks-6d46d3a053f1#:~:text=Both%20Thrift%20and%20gRPC%20generate,codebases%20and%20slower%20compile%20times.
https://medium.com/devglossary/what-is-apache-thrift-is-it-the-same-as-grpc-2562dba125b0
https://www.alluxio.io/blog/moving-from-apache-thrift-to-grpc-a-perspective-from-alluxio/
https://levelup.gitconnected.com/why-use-grpc-and-thrift-for-remote-procedure-calls-a4627a9abe6
https://www.reddit.com/r/RedditEng/comments/xivl8d/leveling_up_reddits_core_the_transition_from/?rdt=52604
Rozne,
https://dlainformatyka.blogspot.com/2018/05/polecenie-netstat.html

Book: useful rozdzialy

0_:::GIT:::
https://stackoverflow.com/questions/804115/when-do-you-use-git-rebase-instead-of-git-merge
https://stackoverflow.com/questions/16666089/whats-the-difference-between-git-merge-and-git-rebase
https://blog.j-labs.pl/git-rebase-vs-merge
https://medium.com/datadriveninvestor/git-rebase-vs-merge-cc5199edd77c
https://www.atlassian.com/git/tutorials/merging-vs-rebasing
https://stackoverflow.com/questions/9069061/what-is-the-difference-between-git-merge-and-git-merge-no-ff
https://nvie.com/posts/a-successful-git-branching-model/
https://www.atlassian.com/git/tutorials/syncing/git-fetch
https://www.atlassian.com/git/tutorials/undoing-changes/git-reset
https://garrytrinder.github.io/2020/03/squashing-commits-using-interactive-rebase
https://stackoverflow.com/questions/2427238/what-is-the-difference-between-merge-squash-and-rebase
https://stackoverflow.com/questions/804115/when-do-you-use-git-rebase-instead-of-git-merge

0_:::ALGORYTMY:::
Zlozonosc obliczeniowa,
Zlozonosc pamieciowa,
Zlozonosc obliczeniowa struktur,
https://stackoverflow.com/questions/4553624/hashmap-get-put-complexity
Sortowania,
binarySearch,
rekursja,
Divide and conquer,
Np problem zupelny, 

https://www.geeksforgeeks.org/fundamentals-of-algorithms/
https://github.com/gadzikk/algorithms
http://wazniak.mimuw.edu.pl/index.php?title=Algorytmy_i_struktury_danych

0_:::METODYKI:::
https://pl.wikipedia.org/wiki/Manifest_Agile
https://pl.wikipedia.org/wiki/Programowanie_ekstremalne
https://pl.wikipedia.org/wiki/Programowanie_zwinne
https://www.coursera.org/articles/kanban-vs-scrum
https://www.planview.com/resources/guide/introduction-to-kanban/kanban-vs-scrum/
https://www.geeksforgeeks.org/difference-between-scrum-and-kanban/
https://www.geeksforgeeks.org/agile-vs-waterfall/
https://www.digitalocean.com/resources/articles/agile-vs-waterfall
https://project-management.com/agile-vs-waterfall/
https://www.techtarget.com/searchsoftwarequality/tip/Waterfall-vs-Agile-methodology-Differences-and-examples
https://www.float.com/resources/agile-vs-waterfall
https://www.guru99.com/scrum-vs-kanban.html
https://en.wikipedia.org/wiki/Complement_(set_theory)#Relative_complement


0_:::LINUX GREP SYSTEMY:::
Regexp,
https://docs.icewarp.com/Content/IceWarp-Server/Administration-Nodes/Domains%20&%20Accounts/Simple%20RegEx%20Tutorial.htm
https://www.geeksforgeeks.org/write-regular-expressions/
https://cs.lmu.edu/~ray/notes/regex/
https://www.freecodecamp.org/news/practical-regex-guide-with-real-life-examples/
https://www.w3schools.com/python/python_regex.asp
https://www.ibm.com/docs/en/nsm/61.1?topic=expressions-regular-expression-syntax
Commands,
https://www.howtogeek.com/412055/37-important-linux-commands-you-should-know/
Shell script tutorial

0_:::ERROR EXCEPTIONS VALIDACJA:::
https://stackoverflow.com/questions/7187302/what-is-serialversionuid-in-java-normally-in-exception-class
Validacja backend,
Validacja frontend,
Validacja baza danych,

https://www.journaldev.com/2167/java-exception-interview-questions-and-answers
https://stackoverflow.com/questions/35409216/how-to-handle-stackoverflowerror

0_:::ENCRYPTION ENCODING HASLA HASH SALT:::
Rodzaje autentykacji,
https://nordicapis.com/3-common-methods-api-authentication-explained/
https://blog.risingstack.com/web-authentication-methods-explained/
https://dev.to/bearer/the-three-most-common-api-authentication-methods-2mnm
https://dzone.com/articles/four-most-used-rest-api-authentication-methods
https://blog.restcase.com/4-most-used-rest-api-authentication-methods/
https://www.csoonline.com/article/3216404/what-is-oauth-how-the-open-authorization-framework-works.html
https://sekurak.pl/oauth-2-0-jak-dziala-jak-testowac-problemy-bezpieczenstwa/
https://stackoverflow.com/questions/2384230/what-is-digest-authentication
https://en.wikipedia.org/wiki/Digest_access_authentication
https://www.1kosmos.com/security-glossary/digest-authentication/
Asymetric encryption,
https://stackoverflow.com/questions/3867019/what-are-the-merits-of-jks-vs-pkcs12-for-code-signing
https://www.baeldung.com/java-keystore-truststore-difference
https://crypto.stackexchange.com/questions/82135/difference-between-pem-vs-p12-vs-crt-vs-jks-vs-keystore-vs-pkcs-vs-x509-certific
https://dev.to/manukam/pkcs12-b2m
https://en.wikipedia.org/wiki/X.509
https://colinpaice.blog/2021/03/18/pkcs11-pkcs12-cms-jks-p12-nss-which-type-of-keystore-should-i-use/
https://senthilnayagan.medium.com/java-truststores-and-keystores-4cebd8bfb813
http://blog.palominolabs.com/2011/10/18/java-2-way-tlsssl-client-certificates-and-pkcs12-vs-jks-keystores/index.html
https://peoplesofttutorial.com/understanding-java-keystore-types/
https://security.stackexchange.com/questions/183072/pem-cer-crt-p12-what-is-it-all-about
https://comodosslstore.com/resources/a-ssl-certificate-file-extension-explanation-pem-pkcs7-der-and-pkcs12/
https://sharif2008.wordpress.com/2017/08/27/difference-between-p12-pfx-vs-crt-cer-vs-pem-vs-der/
https://serverfault.com/questions/984515/pkcs12-and-cer-relation
https://stackoverflow.com/questions/75351338/pkcs1-vs-pkcs8-vs-pkcs12-for-rsa-keys
https://stackoverflow.com/questions/48958304/pkcs1-and-pkcs8-format-for-rsa-private-key
https://en.wikipedia.org/wiki/PKCS
https://en.wikipedia.org/wiki/Padding_(cryptography)
https://crypto.stackexchange.com/questions/9043/what-is-the-difference-between-pkcs5-padding-and-pkcs7-padding
https://www.ibm.com/docs/en/zos/2.4.0?topic=rules-pkcs-padding-method
https://stackoverflow.com/questions/61777208/what-is-the-difference-between-pkcs-v1-5-padding-and-pkcs-v2-1-padding
TLS-SSL,
https://www.cloudflare.com/learning/ssl/transport-layer-security-tls/
https://www.cloudflare.com/learning/ssl/what-is-an-ssl-certificate/
https://www.cloudflare.com/learning/access-management/what-is-mutual-tls/
https://www.cloudflare.com/learning/ssl/what-is-ssl/
https://www.cloudflare.com/learning/ssl/what-is-https/
https://dzone.com/articles/ssl-in-java
https://jchost.pl/blog/tls/
https://www.digicert.com/what-is-ssl-tls-and-https
https://aws.amazon.com/compare/the-difference-between-ssl-and-tls/
MLE,
https://developer.visa.com/pages/encryption_guide
https://help.hcl-software.com/bigfix/10.0/platform/Platform/Config/c_message_level_encryption__mle_.html
Rodzaje autoryzacji,
Encryption,
https://medium.com/@algoryne_44970/how-to-secure-your-rest-api-with-rsa-and-aes-encryption-13f269a6952e
https://develop.hsbc.com/knowledge-article/api-security-hsbc
https://developer.mastercard.com/platform/documentation/authentication/securing-sensitive-data-using-payload-encryption/
https://www.javacodegeeks.com/2024/04/a-guide-to-encryption-and-decryption-in-java.html
https://stackoverflow.com/questions/1205135/how-to-encrypt-string-in-java
https://www.geeksforgeeks.org/ecb-mode-vs-cbc-mode-in-cryptography/
https://www.geeksforgeeks.org/block-cipher-modes-of-operation/
https://www.geeksforgeeks.org/electronic-code-book-ecb-in-cryptography/
https://www.techtarget.com/searchsecurity/definition/cipher-block-chaining
https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation
https://www.sciencedirect.com/topics/mathematics/cipher-block-chaining#:~:text=Block%20Chaining%20(CBC)-,Cipher%20Block%20Chaining%20(CBC)%20mode%20is%20a%20block%20mode%20of,This%20%E2%80%9Cchaining%E2%80%9D%20destroys%20patterns.
https://eitca.org/cybersecurity/eitc-is-ccf-classical-cryptography-fundamentals/applications-of-block-ciphers/modes-of-operation-for-block-ciphers/examination-review-modes-of-operation-for-block-ciphers/what-role-does-the-initialization-vector-iv-play-in-cipher-block-chaining-cbc-mode-and-how-does-it-enhance-security/
https://docs.oracle.com/javase/8/docs/api/index.html?javax/crypto/spec/IvParameterSpec.html
https://www.veracode.com/blog/research/encryption-and-decryption-java-cryptography
https://stackoverflow.com/questions/6126061/pbekeyspec-what-do-the-iterationcount-and-keylength-parameters-influence
https://www.aspencrypt.com/crypto101_terminology.html
https://www.aspencrypt.com/crypto101_symmetric.html
https://www.aspencrypt.com/crypto101_public.html
https://www.aspencrypt.com/crypto101_certs.html
https://www.aspencrypt.com/crypto101_smime.html
https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#Cipher
https://stackoverflow.com/questions/20770072/aes-cbc-pkcs5padding-vs-aes-cbc-pkcs7padding-with-256-key-size-performance-java
https://crypto.stackexchange.com/questions/9043/what-is-the-difference-between-pkcs5-padding-and-pkcs7-padding
https://stackoverflow.com/questions/68376604/java-cipher-aes-cbc-pkcs5padding-with-32-bytes-keys
https://stackoverflow.com/questions/66499175/aes-cbc-pkcs5padding-encryption-with-fixed-iv-or-without-one
https://www.herongyang.com/Cryptography/DES-JDK-What-Is-PKCS5Padding.html
Hashing,
https://www.baeldung.com/sha-256-hashing-java
https://hyperskill.org/learn/step/30833
https://stackoverflow.com/questions/19467957/how-can-i-reverse-the-output-from-this-method
https://www.aspencrypt.com/crypto101_hash.html
https://forums.oracle.com/ords/apexds/post/can-i-reverse-messagedigest-digest-0251
https://www.javatpoint.com/messagedigest-in-java
https://stackoverflow.com/questions/24979557/complete-list-of-messagedigest-available-in-the-jdk
https://gregorycernera.medium.com/generating-a-message-digest-with-java-explained-step-by-step-with-pictures-b9be6c6e5036
https://en.wikipedia.org/wiki/Cryptographic_hash_function
https://jenkov.com/tutorials/java-cryptography/messagedigest.html
https://stackoverflow.com/questions/2329582/what-is-currently-the-most-secure-one-way-encryption-algorithm
https://www.okta.com/identity-101/one-way-hash-function-dynamic-algorithms/
https://jolynch.github.io/posts/use_fast_data_algorithms/
https://github.com/ehp/blake3

Encoding,
https://www.javatpoint.com/types-of-encoding-techniques
https://www.baeldung.com/java-char-encoding

0_:::DEVOPS:::
Docker,
https://www.guru99.com/docker-tutorial.html
https://www.rangeforce.com/blog/docker-software-basics
https://vsupalov.com/6-docker-basics/
https://thenewstack.io/docker-station-part-one-essential-docker-concepts-tools-terminology/
https://www.tutorialspoint.com/docker/docker_containers.htm
https://searchitoperations.techtarget.com/definition/Docker-image
https://en.wikipedia.org/wiki/Docker_(software)
https://docs.docker.com/get-started/docker-overview/
https://moldstud.com/articles/p-how-to-automate-deployments-using-docker-for-developers
https://romanglushach.medium.com/dock-and-roll-master-docker-automation-and-container-deployment-6b3cb1ed897d
https://aws.amazon.com/compare/the-difference-between-docker-vm/
https://www.linkedin.com/advice/1/how-does-docker-differ-from-traditional-virtualization-oh3ee
https://www.quora.com/Why-is-Docker-considered-a-virtualization-technology
https://www.docker.com/blog/containers-are-not-vms/
https://medium.com/@haticeyildiz/docker-containerization-and-virtualization-benefits-advantages-and-disadvantages-737b31b86213
https://www.qa.com/resources/blog/docker-vs-virtual-machines-differences-you-should-know/
https://stackoverflow.com/questions/16047306/how-is-docker-different-from-a-virtual-machine
Kubernetes,
https://faun.pub/the-difference-between-liveness-readiness-and-startup-probes-781bd3141079
https://www.okteto.com/blog/kubernetes-basics/
https://spacelift.io/blog/kubernetes-tutorial
https://www.educative.io/blog/kubernetes-deployments-pods-services
https://www.vmware.com/topics/glossary/content/kubernetes-services.html
https://www.vmware.com/topics/glossary/content/kubernetes-deployment.html
https://istio.io/latest/about/service-mesh/
Azure,
AWS,
https://www.javatpoint.com/aws-global-infrastructure
https://medium.com/javarevisited/top-10-courses-to-learn-amazon-web-services-aws-cloud-in-2020-best-and-free-317f10d7c21d
https://towardsdatascience.com/top-12-ways-to-learn-aws-for-free-1113af329d06
https://aws.amazon.com/training/
https://aws.amazon.com/getting-started/fundamentals-core-concepts/?e=gs2020&p=fundoverview
https://aws.amazon.com/getting-started/
https://www.guru99.com/aws-tutorial.html
https://www.quora.com/What-is-the-best-resource-for-learning-AWS
https://aws.amazon.com/faqs/
https://www.techtarget.com/searchcloudcomputing/tip/Compare-Amazon-ECS-vs-EKS
https://bluexp.netapp.com/blog/aws-cvo-blg-aws-ecs-vs-eks-6-key-differences
https://www.justaftermidnight247.com/insights/ebs-efs-and-s3-when-to-use-awss-three-storage-solutions/
https://cloudteam.pl/sciezki/aws-certified-solutions-architect-associate/
https://lepczynski.it/aws/jak-zdalem-egzamin-aws-certified-solutions-architect-associate-porady-ktore-pomagaja-zdac/
Metrics,
https://prometheus.io/docs/concepts/metric_types/
https://www.timescale.com/blog/four-types-prometheus-metrics-to-collect/
https://www.timescale.com/blog/a-deep-dive-into-open-telemetry-metrics/
https://www.timescale.com/blog/prometheus-vs-opentelemetry-metrics-a-complete-guide/
https://scalac.io/blog/opentelemetry-from-a-birds-eye-view-a-few-noteworthy-parts-of-the-project/
https://ivan-kurchenko.medium.com/telemetry-with-scala-part-1-opentelemetry-758c72a136e7
https://ivan-kurchenko.medium.com/telemetry-with-scala-part-2-kamon-5295dd9e3a1
https://ivan-kurchenko.medium.com/telemetry-with-scala-part-3-otel4s-c5c150303164
https://dzone.com/refcardz/getting-started-with-opentelemetry
https://github.com/IvannKurchenko/blog-telemetry/tree/main/otel4s/src/main
https://github.com/typelevel/otel4s/tree/main/examples/src/main/scala
https://github.com/IvannKurchenko/blog-telemetry/blob/main/blog/3_OTEL4S.md
https://codeblog.dotsandbrackets.com/scraping-application-metrics-prometheus/
https://last9.io/blog/prometheus-metrics-types-a-deep-dive/
https://stackoverflow.com/questions/71768510/when-to-use-gauge-or-histogram-in-prometheus-in-recording-request-duration
https://prometheus.io/docs/concepts/metric_types/
https://chronosphere.io/learn/an-introduction-to-the-four-primary-types-of-prometheus-metrics/
https://chronosphere.io/learn/know-the-sre-fundamentals-differences-between-sli-vs-slo-vs-sla/
https://apitoolkit.io/blog/monitor-api-slas-and-slos/
https://www.atlassian.com/incident-management/kpis/sla-vs-slo-vs-sli
https://mohitkr27.medium.com/understanding-sla-slo-sli-and-error-budgets-faf613063abd
https://signoz.io/guides/slo-vs-sla/
Iaas Paas Saas,
https://cloud.google.com/learn/paas-vs-iaas-vs-saas
https://polcom.com.pl/en/uncategorized-en/knowledge-base-uncategorized-en/what-are-differences-between-iaas-paas-and-saas/
https://innasiec.pl/jakie-sa-roznice-miedzy-iaas-vs-paas-vs-saas/
https://www.ibm.com/topics/iaas-paas-saas
https://www.redhat.com/en/topics/cloud-computing/iaas-vs-paas-vs-saas
https://www.bmc.com/blogs/saas-vs-paas-vs-iaas-whats-the-difference-and-how-to-choose/
Helm,
https://helm.sh/docs/chart_template_guide/getting_started/
https://medium.com/@praveenkumarsingh/getting-started-with-helm-charts-deploy-your-first-chart-effff4bd7a07
https://spot.io/resources/kubernetes-architecture/kubernetes-helm-charts-the-basics-and-a-quick-tutorial/
Rozne,
https://www.baeldung.com/cs/virtualization-vs-containerization
https://www.liquidweb.com/kb/virtualization-vs-containerization/
https://www.burwood.com/blog-archive/containerization-vs-virtualization
https://en.wikipedia.org/wiki/Virtualization
https://www.cio.com/article/2924995/what-are-containers-and-why-do-you-need-them.html
http://www.serverspace.co.uk/blog/containerisation-vs-virtualisation-whats-the-difference
https://www.guru99.com/kubernetes-vs-docker.html

https://www.guru99.com/docker-interview-questions.html
https://training.play-with-docker.com/

Books: docker folder

0_:::KONFIGURACJA:::
Maven,
Gradle,
Hibernate,
Spring,
Database,
Mircroservice,
Tomcat,

Praktyka: BBH, CL


0_:::CONTINOUS DEPLOYMENT:::
Jenkins,
sonarCube,


0_:::WIEDZA Z ARTYKULOW:::
jrevised | javaworld | journaldev | dzone | howtodoinjava |

0_:::PRAKTYCZNE PROJEKTY:::
BBH, CL dobre praktyki
IOB, GUPS, ALI, boss, bpa-configi



0_:::SQL DATABASES:::
 bazy grafowe, problem transakcji(https://docs.oracle.com/javase/tutorial/jdbc/basics/transactions.html ),
lazy vs eager, rodzaje joinow, procedury projektu na studia, caching,
https://en.wikipedia.org/wiki/ACID
https://www.geeksforgeeks.org/acid-properties-in-dbms/
https://www.bmc.com/blogs/acid-atomic-consistent-isolated-durable/
https://www.databricks.com/glossary/acid-transactions
https://www.oracletutorial.com/oracle-basics/oracle-not-exists/
http://www.dba-oracle.com/t_tuning_where_not_exists_sql.htm
https://www.techonthenet.com/postgresql/vacuum.php
https://www.w3schools.com/sql/sql_injection.asp
https://stackoverflow.com/questions/1388059/sql-server-index-columns-used-in-like
https://use-the-index-luke.com/sql/testing-scalability
https://stackoverflow.com/questions/6142235/sql-like-vs-performance
https://stackoverflow.com/questions/2955459/what-is-an-index-in-sql
https://stackoverflow.com/questions/1108/how-does-database-indexing-work
https://www.sqlteam.com/articles/sql-server-indexes-the-basics
https://docs.microsoft.com/en-us/sql/relational-databases/indexes/clustered-and-nonclustered-indexes-described?redirectedfrom=MSDN&view=sql-server-ver15
https://www.red-gate.com/simple-talk/sql/learn-sql-server/sql-server-index-basics/
https://www.geeksforgeeks.org/sql-indexes/
https://www.sqlshack.com/top-10-questions-answers-sql-server-indexes/
https://stackoverflow.com/questions/1251636/what-do-clustered-and-non-clustered-index-actually-mean
https://www.geeksforgeeks.org/difference-between-clustered-and-non-clustered-index/
http://sqlszkolenia.pl/aktualnosci/18-jak-dziala-join-w-sql-server
https://www.geeksforgeeks.org/sql-join-set-1-inner-left-right-and-full-joins/
https://www.softwaretestinghelp.com/inner-join-vs-outer-join/
https://www.toolbox.com/tech/data-management/question/join-performance-inner-join-or-left-outer-join-030110/
https://dba.stackexchange.com/questions/229165/why-is-this-left-join-faster-than-an-inner-join
https://www.sqlshack.com/design-sql-queries-better-performance-select-exists-vs-vs-joins/
https://forums.mysql.com/read.php?115,647656,647656
https://stackoverflow.com/questions/2726657/inner-join-vs-left-join-performance-in-sql-server
https://neon.tech/postgresql/postgresql-tutorial/postgresql-natural-join
https://pl.wikipedia.org/wiki/Posta%C4%87_normalna_(bazy_danych)
https://medium.com/@ndleah/a-brief-guide-to-database-normalization-5ac59f093161
https://learn.microsoft.com/en-us/office/troubleshoot/access/database-normalization-description
https://www.freecodecamp.org/news/database-normalization-1nf-2nf-3nf-table-examples/
https://www.geeksforgeeks.org/introduction-of-database-normalization/
https://stackoverflow.com/questions/3861558/what-are-the-benefits-of-using-database-cursor
https://bipp.io/sql-tutorial/advanced-sql/sql-correlated-subqueries/
https://www.scaler.com/topics/sql/correlated-subquery/
https://neon.tech/postgresql/postgresql-tutorial/postgresql-correlated-subquery
https://medium.com/@sumitkum001/mastering-sql-subqueries-and-query-optimisation-2991ce5db7be
https://duckdb.org/2023/05/26/correlated-subqueries-in-sql.html
Sql distributed sharding,
https://www.quora.com/What-is-the-difference-between-a-distributed-database-and-a-traditional-database-Are-distributed-databases-relational-or-not-What-are-the-advantages-and-disadvantages-of-distributed-databases-compared-to-traditional
https://techcommunity.microsoft.com/t5/azure-database-for-postgresql/understanding-partitioning-and-sharding-in-postgres-and-citus/ba-p/3891629
https://pgdash.io/blog/postgres-11-sharding.html
https://www.percona.com/blog/an-overview-of-sharding-in-postgresql-and-how-it-relates-to-mongodbs/
https://postgrespro.com/blog/pgsql/5969681
https://www.cockroachlabs.com/blog/sharding-bad-business/
https://www.cockroachlabs.com/blog/what-is-a-distributed-database/
https://www.cockroachlabs.com/blog/cockroachdb-payments-system-architecture/
https://www.cockroachlabs.com/blog/the-hot-content-problem-metadata-storage-for-media-streaming/
https://www.cockroachlabs.com/blog/what-is-data-partitioning-and-how-to-do-it-right/
https://www.cockroachlabs.com/blog/what-is-distributed-sql/
Sql guidelines,
https://www.cockroachlabs.com/blog/vertical-scaling-vs-horizontal-scaling/
https://www.cockroachlabs.com/blog/limitations-of-postgres/
https://www.cockroachlabs.com/blog/data-loss-prevention-during-outages-you-might-be-losing-data-without-knowing-it/
https://www.cockroachlabs.com/blog/migrate-databases/
https://www.cockroachlabs.com/blog/disaster-prevention-not-disaster-recovery/
https://www.cockroachlabs.com/blog/how-to-update-database-schema/
https://www.cockroachlabs.com/blog/sql-performance-best-practices/
https://www.cockroachlabs.com/blog/5-reasons-to-build-multi-region-application-architecture/
https://www.cockroachlabs.com/blog/document-store-vs-relational-database/
https://www.cockroachlabs.com/blog/can-i-scale/
https://www.cockroachlabs.com/blog/how-to-choose-db-index-keys/
Window,
https://mode.com/sql-tutorial/sql-window-functions
https://www.geeksforgeeks.org/window-functions-in-sql/
https://www.freecodecamp.org/news/window-functions-in-sql/
https://medium.com/@manutej/mastering-sql-window-functions-guide-e6dc17eb1995
https://www.sqlservercentral.com/articles/sql-window-functions-series-rank-and-dense_rank
https://www.sqlservertutorial.net/sql-server-window-functions/
https://en.wikipedia.org/wiki/Window_function_(SQL)
https://bipp.io/sql-tutorial/advanced-sql/sql-window-functions-examples/
Optimization,
https://londondataconsulting.medium.com/the-different-types-of-indexes-in-databases-a-comprehensive-overview-559a0c4f5fb5
https://www.thoughtspot.com/data-trends/data-modeling/optimizing-sql-queries
https://www.sisense.com/blog/8-ways-fine-tune-sql-queries-production-databases/
https://medium.com/learning-sql/12-tips-for-optimizing-sql-queries-for-faster-performance-8c6c092d7af1
https://blog.devart.com/how-to-optimize-sql-query.html
https://www.geeksforgeeks.org/best-practices-for-sql-query-optimizations/
https://dotnetauthorities.blogspot.com/2013/12/Microsoft-SQL-Server-Training-Online-Learning-Classes-INDEX-Overview-and-Optimizations.html
Denormalization,
https://www.geeksforgeeks.org/denormalization-in-databases/
Rozne,
https://serverfault.com/questions/36696/how-to-speed-up-adding-column-to-large-table-in-sql-server
https://neon.tech/postgresql/postgresql-tutorial/postgresql-recursive-query
https://neon.tech/postgresql/postgresql-tutorial/postgresql-merge
https://neon.tech/postgresql/postgresql-tutorial/postgresql-any
https://neon.tech/postgresql/postgresql-tutorial/postgresql-all
Examples,
https://learnsql.com/blog/25-advanced-sql-query-examples/
https://medium.com/@techsuneel99/20-advanced-sql-techniques-with-practical-examples-b47490d9896d
https://popsql.com/blog/complex-sql-queries
https://airbyte.com/data-engineering-resources/advanced-sql-concepts
https://stackoverflow.com/questions/30861919/what-is-rows-unbounded-preceding-used-for-in-teradata
https://kajodata.com/sql/rows_unbound_preceding/
https://learnsql.com/blog/sql-window-functions-rows-clause/
https://www.geeksforgeeks.org/sql-rows-between/
https://stackoverflow.com/questions/76265582/how-does-unbounded-preceding-and-current-row-work-exactly
https://sqliteonline.com/
https://www.sqltutorial.org/


https://www.quora.com/What-is-a-good-book-on-implementing-a-Relational-Database
T-SQL Querying
SQL Performance Tuning
optimalization DB
https://www.toptal.com/sql-server/sql-database-tuning-for-developers
types (graph DB, NoSQL) and deep

http://nbcampus.com/home/postgresql/postgresql-dba-interview-questions-2020/
https://www.onlineinterviewquestions.com/postgresql-interview-questions/

book: hibernate in action, oracle performance survival guide, High-Performance Java Persistence | java persistence with hibernate | postgresql 10 high performance | OCA Oracle Database 12c | podrecznik jezyka sql - przejrzec | podstawy jezyka sql - przejrzec

0_:::REACTIVE_PROGRAMMING:::
https://github.com/ReactiveX/RxJava
https://javastart.pl/b/java/rxjava-wprowadzenie/
https://bartlomiejchmielewski.pl/rxjava/
https://www.baeldung.com/rx-java
https://projectreactor.io/docs/core/release/reference/
https://www.baeldung.com/reactor-core
https://www.reddit.com/r/javahelp/comments/jdzmks/what_are_the_challenges_with_mixing_reactive/
https://medium.com/@basakabhijoy/reactive-spring-for-beginners-part-1-intro-controllers-8fb7b9d15c20
https://spring.io/blog/2016/07/20/notes-on-reactive-programming-part-iii-a-simple-http-server-application
https://medium.com/@bubu.tripathy/reactive-spring-boot-applications-62ec2fcfc05a
https://stackoverflow.com/questions/69959369/is-it-possible-for-a-non-reactive-client-resttemplate-to-consume-a-reactive-re

0_:::JAVASCRIPT:::
a)plain js
http://eloquentjavascript.net/00_intro.html
https://github.com/getify/You-Dont-Know-JS
https://youtube.com/watch?v=Bv_5Zv5c-Ts
http://es6-features.org/#Constants
https://youtube.com/results?search_query=es6+features
https://youtube.com/watch?t=&v=-q1z8BPFItw
http://javascript.info/ui
https://youtube.com/watch?v=8aGhZQkoFbQ
https://medium.com/better-programming/tagged/javascript
https://javascript.info/symbol
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises
https://developers.google.com/web/fundamentals/primers/async-functions
https://kursjs.pl/kurs/es6/ecma-script-2015.php
https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-closure-b2f0d2152b36
https://m.youtube.com/watch?v=1qXypjZu0sU
https://typeofweb.com/2017/11/14/this-js-kontekst-wywolania-funkcji/
https://typeofweb.com/2017/10/23/kilka-faktow-na-temat-promise/
http://www.algosmart.pl/zakresy-powtorka-reactjs-7/
https://www.w3.org/TR/REC-DOM-Level-1/introduction.html
informacje:  https://4programmers.net/Forum/JavaScript/284930-jak_uczyc_sie_javascript_przeczytaj_zanim_zadasz_pytanie_na_temat_materialow_do_nauki?page=1

https://www.guru99.com/javascript-interview-questions-answers.html
https://www.w3schools.com/js/default.asp
https://dev.to/macmacky/70-javascript-interview-questions-5gfi

https://developer.mozilla.org/pl/docs/Web/JavaScript/EventLoop
https://geek.justjoin.it/event-loop-a-kolejnosc-wykonywania-kodu-javascript
https://blog.sessionstack.com/how-javascript-works-event-loop-and-the-rise-of-async-programming-5-ways-to-better-coding-with-2f077c4438b5
https://flaviocopes.com/javascript-event-loop/
https://stackoverflow.com/questions/5654447/whats-the-difference-between-scss-and-sass
https://ach-te-internety.pl/sass-i-scss/
https://www.tutorialsteacher.com/javascript/prototype-in-javascript
https://medium.com/@parsyval/javascript-prototype-vs-class-a7015d5473b
https://medium.com/javascript-scene/master-the-javascript-interview-what-s-the-difference-between-class-prototypal-inheritance-e4cd0a7562e9
https://javascript.info/prototype-inheritance
https://www.tutorialsteacher.com/javascript/immediately-invoked-function-expression-iife
https://stackoverflow.com/questions/762011/whats-the-difference-between-using-let-and-var
https://bulldogjob.pl/news/1062-var-let-i-const-hoisting-i-zasieg-w-javascript
https://www.tutorialsteacher.com/javascript/javascript-hoisting
https://www.tutorialsteacher.com/javascript/javascript-strict
https://www.tutorialsteacher.com/javascript/javascript-eval
https://stackoverflow.com/questions/51716808/when-use-a-interface-or-class-in-typescript
https://medium.com/front-end-weekly/typescript-class-vs-interface-99c0ae1c2136
https://medium.com/javascript-in-plain-english/interfaces-and-classes-in-typescript-part-6-3-7fee77b7518b
https://developer.mozilla.org/pl/docs/orphaned/Web/Guide/HTML/HTML5
https://dev.to/steelvoltage/if-javascript-is-single-threaded-how-is-it-asynchronous-56gd

b) angular
https://www.angular.love/2018/07/04/rxjs-w-angular-co-wypada-wiedziec/
https://jasonwatmore.com/post/2019/02/07/angular-7-communicating-between-components-with-observable-subject
https://angular.io/guide/attribute-directives
https://www.sitepoint.com/practical-guide-angular-directives/
https://www.ag-grid.com/documentation/angular/getting-started/
https://blog.angular-university.io/how-does-angular-2-change-detection-really-work/
https://www.angular.love/2017/01/15/angular-2-change-detector-mechanizmy-detekcji-oraz-strategia-onpush/
https://medium.com/@bencabanes/angular-change-detection-strategy-an-introduction-819aaa7204e7

https://github.com/sudheerj/angular-interview-questions
https://www.interviewbit.com/angular-interview-questions/
https://www.edureka.co/blog/interview-questions/top-angularjs-interview-questions-2016/

dokumentacja
projekt GUPS
projekt IOB
angular animations

b2)angularJS
projekt harp
swoj projekt w repo
https://www.udemy.com/learn-angularjs/
https://youtube.com/channel/UCJ1GreMvJv6U5JtPGCinwJw/playlists?view=50&sort=dd&shelf_id=12

c)rxjs
https://www.google.com/search?q=rxjs&ie=utf-8&oe=utf-8&client=firefox-b-e

d) odswiezyc jquery
dokumentacja
projekt tiger
youtube jquery
jquery best practices

e)react + redux
##TODO##

(op) https://github.com/getify/Functional-Light-JS


0_:::STUDIA:::
https://syllabuskrk.agh.edu.pl/2018-2019/pl/magnesite/study_plans/niestacjonarne-informatyka

0_:::NIEZWIAZANE:::
https://morethancoding.com/2011/05/22/the-programmer-pyramid/
http://scala-poland.eu/companies/
https://www.programcreek.com/scala/org.http4s.Uri
https://www.cloudflare.com/learning/
https://certificatetools.com/
https://voicegenerator.io/




otherTools:
Spark, Akka, Storm, Hadoop, Sqoop, Cassandra, AWS https://www.udemy.com/aws-w-7-dni/
, PLAY,  Cassandra / Redis/ concord / scalaZ / liftweb
Landoop Lenses /Apache Flink / Apache Spark
HBase, and/or MapReduce
Hadoop jako stack (YARN + HDFS + Hive)
scalaz, cats, http4s
